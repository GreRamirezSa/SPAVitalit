/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prototipospa;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Daniel
 */
public class CitasAdmin extends javax.swing.JFrame {

    principalAdmin back;
    int contador = 0;
    int c=0;
    private int l;
    SesionesAdmin ir;

    /**
     * Creates new form CitasAdmin
     */
    public CitasAdmin() {
        initComponents();
        try {
            llenarCB();
        } catch (SQLException ex) {
            Logger.getLogger(CitasAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        setLocationRelativeTo(null);
        actualizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public void nombre(String u) {
        Lbusu.setText(u);
        Lbusu.setVisible(false);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_usuarios = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        button_registrar = new javax.swing.JButton();
        button_eliminar = new javax.swing.JButton();
        button_actualizar = new javax.swing.JButton();
        button_buscar = new javax.swing.JButton();
        button_verTodo = new javax.swing.JButton();
        button_regresar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_nom = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_no = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        comboEstado = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_comen = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        comboServicios = new javax.swing.JComboBox<>();
        comboUno = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        comboDos = new javax.swing.JComboBox<>();
        comboAm = new javax.swing.JComboBox<>();
        combocabina = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        cmbanio = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        cmbmes = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        cmbdia = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        txt_idp = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txt_asis = new javax.swing.JTextField();
        button_buscar1 = new javax.swing.JButton();
        button_buscar2 = new javax.swing.JButton();
        Lbusu = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        button_verTodo1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        table_usuarios.setBackground(new java.awt.Color(255, 102, 0));
        table_usuarios.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        table_usuarios.setForeground(new java.awt.Color(255, 255, 255));
        table_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Servicio"
            }
        ));
        table_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_usuariosMouseClicked(evt);
            }
        });
        table_usuarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_usuariosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table_usuarios);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones para citas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 14))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(153, 0, 153));
        jPanel1.setInheritsPopupMenu(true);
        jPanel1.setName(""); // NOI18N
        jPanel1.setOpaque(false);

        button_registrar.setBackground(new java.awt.Color(255, 136, 18));
        button_registrar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_registrar.setText("Registrar");
        button_registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_registrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_registrarMouseEntered(evt);
            }
        });
        button_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_registrarActionPerformed(evt);
            }
        });
        button_registrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                button_registrarKeyReleased(evt);
            }
        });
        jPanel1.add(button_registrar);

        button_eliminar.setBackground(new java.awt.Color(255, 136, 18));
        button_eliminar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_eliminar.setText("Eliminar");
        button_eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_eliminarMouseClicked(evt);
            }
        });
        jPanel1.add(button_eliminar);

        button_actualizar.setBackground(new java.awt.Color(255, 136, 18));
        button_actualizar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_actualizar.setText("Actualizar");
        button_actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_actualizarMouseClicked(evt);
            }
        });
        jPanel1.add(button_actualizar);

        button_buscar.setBackground(new java.awt.Color(255, 136, 18));
        button_buscar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_buscar.setText("Buscar");
        button_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_buscarMouseClicked(evt);
            }
        });
        jPanel1.add(button_buscar);

        button_verTodo.setBackground(new java.awt.Color(255, 136, 18));
        button_verTodo.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_verTodo.setText("Ver Todo");
        button_verTodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_verTodoMouseClicked(evt);
            }
        });
        jPanel1.add(button_verTodo);

        button_regresar.setBackground(new java.awt.Color(255, 136, 18));
        button_regresar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_regresar.setText("Regresar");
        button_regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_regresarMouseClicked(evt);
            }
        });
        jPanel1.add(button_regresar);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 36)); // NOI18N
        jLabel5.setText("Citas");

        txt_nom.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nomActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/logoBueno.jpg"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setText("Nombre");

        txt_no.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_noKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setText("Número de teléfono");

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel9.setText("Hora");

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel10.setText("Fecha");

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel11.setText("Cabina");

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel12.setText("Estado");

        comboEstado.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        comboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija", "Pendiente", "Confirmada", "Cancelada", "Servicio Realizado", " ", " " }));

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel13.setText("Comentarios");

        txt_comen.setColumns(20);
        txt_comen.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        txt_comen.setLineWrap(true);
        txt_comen.setRows(5);
        jScrollPane2.setViewportView(txt_comen);

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel14.setText("Servicio");

        comboServicios.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        comboServicios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Poner servs" }));

        comboUno.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        comboUno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel15.setText(":");

        comboDos.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        comboDos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55" }));

        comboAm.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        comboAm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "am", "pm" }));

        combocabina.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        combocabina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", " " }));

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 0, 10)); // NOI18N
        jLabel16.setText("Año");

        cmbanio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900" }));

        jLabel17.setFont(new java.awt.Font("Trebuchet MS", 0, 10)); // NOI18N
        jLabel17.setText("Mes");

        cmbmes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cmbmes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbmesActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 0, 10)); // NOI18N
        jLabel18.setText("Día");

        cmbdia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel19.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel19.setText("ID");

        txt_idp.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_idp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idpActionPerformed(evt);
            }
        });
        txt_idp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_idpKeyTyped(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel20.setText("Asistente");

        txt_asis.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_asis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_asisActionPerformed(evt);
            }
        });

        button_buscar1.setBackground(new java.awt.Color(255, 136, 18));
        button_buscar1.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        button_buscar1.setText("Agregar");
        button_buscar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_buscar1MouseClicked(evt);
            }
        });

        button_buscar2.setBackground(new java.awt.Color(255, 136, 18));
        button_buscar2.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        button_buscar2.setText("Eliminar");
        button_buscar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_buscar2MouseClicked(evt);
            }
        });

        Lbusu.setText("jLabel2");

        jPanel3.setBackground(new java.awt.Color(51, 51, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sesiones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 14))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(153, 0, 153));
        jPanel3.setInheritsPopupMenu(true);
        jPanel3.setName(""); // NOI18N
        jPanel3.setOpaque(false);

        button_verTodo1.setBackground(new java.awt.Color(255, 136, 18));
        button_verTodo1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_verTodo1.setText("Control");
        button_verTodo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_verTodo1MouseClicked(evt);
            }
        });
        jPanel3.add(button_verTodo1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(328, 328, 328)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addGap(519, 519, 519))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1049, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Lbusu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)))
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_no)
                        .addComponent(txt_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(comboUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboAm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbanio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbdia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(button_buscar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_buscar2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(combocabina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(14, 14, 14)
                                        .addComponent(comboServicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(19, 19, 19)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addComponent(txt_idp, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(84, 84, 84)))
                        .addGap(35, 35, 35))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_asis, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Lbusu))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(txt_no, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboAm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(12, 12, 12)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmbdia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmbmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmbanio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(combocabina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboServicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(button_buscar1)
                                    .addComponent(button_buscar2)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_idp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_asis, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void table_usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_usuariosMouseClicked
        l = table_usuarios.getSelectedRow();
    }//GEN-LAST:event_table_usuariosMouseClicked

    private void table_usuariosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_usuariosKeyReleased

    }//GEN-LAST:event_table_usuariosKeyReleased

    private void button_registrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_registrarMouseClicked
        contador = 0;
        String nombre = txt_nom.getText();
        String no = txt_no.getText();
        String comentario = txt_comen.getText();
        String asistente = txt_asis.getText();
        String hora = "" + comboUno.getSelectedItem() + ":" + comboDos.getSelectedItem() + "" + comboAm.getSelectedItem() + "";
        String fecha = "" + cmbanio.getSelectedItem() + "-" + cmbmes.getSelectedItem() + "-" + cmbdia.getSelectedItem() + "";
        String cabina = "" + combocabina.getSelectedItem() + "";
        String estado = "" + comboEstado.getSelectedItem() + "";
        String servicio = "" + comboServicios.getSelectedItem() + "";

        int response = JOptionPane.showConfirmDialog(this, "Nombre: " + nombre + "\nNumero: " + no + "\nHora: " + hora + "\nFecha: " + fecha + "\nServicio: " + servicio + "\n¿Son los datos correctos?", "ATENCIÓN",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        switch (response) {
            case JOptionPane.NO_OPTION:
                break;
            case JOptionPane.YES_OPTION:
                Connection miCon,
                 miCon4;
                miCon = (new ConexionBD()).conectar();
                miCon4 = (new ConexionBD()).conectar();
                if (!nombre.equals("") && !no.equals("") && !asistente.equals("")) {
                    if (comboEstado.getSelectedIndex() != 0) {
                        if (table_usuarios.getColumnCount() == 1 && table_usuarios.getRowCount() > 0) {
                            //table_usuarios.getColumnCount() == 4 && table_usuarios.getRowCount() > 0
                            if (miCon4 != null) {
                                try {
                                    miCon4 = (new ConexionBD()).conectar();
                                    String sql4 = "select no_tel from clientes where no_tel='" + no + "'";
                                    Statement stmt4 = miCon.createStatement();
                                    ResultSet r4 = stmt4.executeQuery(sql4);
                                    if (r4.next()) {
                                        if (miCon != null) {
                                            try {
                                                String sql = "insert into cita (id_cliente,nom_cliente,no_tel,hora,fecha,cabina,status,comentarios,asistente)  values ((select id_clientes from clientes where no_tel ='" + no + "'),'" + nombre + "','" + no + "','" + hora + "','" + fecha + "','" + cabina + "','" + estado + "','" + comentario + "','" + asistente + "')";
                                                Statement stmt = miCon.createStatement();
                                                stmt.executeUpdate(sql);

                                                String nv = "select max(id_cita) as \"maximo\" from cita";
                                                ResultSet r = stmt.executeQuery(nv);
                                                r.next();
                                                String nv1 = r.getString("maximo");

                                                for (int i = 0; i < table_usuarios.getRowCount(); i++) {
                                                    String sql2 = "insert into det_cita (id_cita,id_servicio,servicio)values(" + nv1 + ",(select id_servicio from servicios where nombre='" + table_usuarios.getValueAt(i, 0) + "'),'" + table_usuarios.getValueAt(i, 0) + "')";
                                                    stmt.executeUpdate(sql2);
                                                }
                                                txt_asis.setText("");
                                                txt_idp.setText("");
                                                txt_no.setText("");
                                                txt_nom.setText("");
                                                txt_comen.setText("");
                                                comboEstado.setSelectedIndex(0);
                                                stmt.close();
                                                JOptionPane.showMessageDialog(null, "Registrado exitosamente");
                                            } catch (SQLException e) {
                                                JOptionPane.showMessageDialog(null, "Error, ingrese un número de teléfono válido");
                                            }
                                        }
                                        actualizar();
                                    } else {
                                        JOptionPane.showMessageDialog(this, "Error, no existe el número  ");
                                    }

                                } catch (SQLException e) {
                                    JOptionPane.showMessageDialog(this, "Error  " + e.getMessage());
                                }

                            }

                        } else {
                            JOptionPane.showMessageDialog(this, "Error, agregue servicios a la cita");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Error, seleccionar el estado de la cita");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Error, no dejar campos vacíos");
                }

                break;

            case JOptionPane.CLOSED_OPTION:
                break;
            default:
                break;
        }
    }//GEN-LAST:event_button_registrarMouseClicked

    private void button_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_registrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button_registrarActionPerformed

    private void button_registrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_registrarKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_button_registrarKeyReleased

    private void button_eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_eliminarMouseClicked
        contador = 0;
        String idp = txt_idp.getText();
        int response = JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea eliminar la cita?", "ATENCIÓN",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        switch (response) {
            case JOptionPane.NO_OPTION:
                break;
            case JOptionPane.YES_OPTION:
                Connection miCon,
                 miCon2;
                miCon = (new ConexionBD()).conectar();
                miCon2 = (new ConexionBD()).conectar();
                if (!idp.equals("")) {
                    if (miCon != null) {
                        try {
                            String sql = "DELETE FROM det_cita WHERE id_cita=" + idp;
                            Statement stmt = miCon.createStatement();
                            stmt.executeUpdate(sql);
                            //r.close();
                            stmt.close();
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(this, "Error, no se pudo eliminar " + e.getMessage());
                        }
                    }
                    if (miCon2 != null) {
                        try {
                            String sql = "DELETE FROM cita WHERE id_cita=" + idp;
                            Statement stmt = miCon.createStatement();
                            stmt.executeUpdate(sql);
                            // r.close();
                            stmt.close();
                            JOptionPane.showMessageDialog(this, "Eliminado con éxito");
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(this, "Error, no se pudo eliminar " + e.getMessage());
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Error, ingrese el id a eliminar");
                }
                actualizar();
                txt_idp.setText("");
                break;
            case JOptionPane.CLOSED_OPTION:
                break;
            default:
                break;
        }
    }//GEN-LAST:event_button_eliminarMouseClicked

    private void button_actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_actualizarMouseClicked
        contador = 0;
        String id = txt_idp.getText();
        String asistente = txt_asis.getText();
        int estado = comboEstado.getSelectedIndex();

        if (!asistente.equals("") || comboEstado.getSelectedIndex() != 0) {
            int response = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea actualizar?", "ATENCIÓN",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            switch (response) {
                case JOptionPane.NO_OPTION:
                    break;
                case JOptionPane.YES_OPTION:
                    Connection miCon;
                    miCon = (new ConexionBD()).conectar();
                    if (!id.equals("")) {
                        if (miCon != null) {
                            try {
                                String sql = verificar(asistente, estado) + id;
                                Statement stmt = miCon.createStatement();
                                stmt.executeUpdate(sql);
                                stmt.close();
                                JOptionPane.showMessageDialog(this, "Actualizado correctamente ");
                            } catch (SQLException e) {
                                JOptionPane.showMessageDialog(this, "Verificar numero " + e.getMessage());
                            }
                        }
                        txt_asis.setText("");
                        txt_idp.setText("");
                        txt_no.setText("");
                        txt_nom.setText("");
                        txt_comen.setText("");
                        comboEstado.setSelectedIndex(0);
                    } else {
                        JOptionPane.showMessageDialog(this, "Error, ingrese el ID cita");
                    }//else del primero
                    actualizar();
                    break;
                case JOptionPane.CLOSED_OPTION:
                    break;
                default:
                    break;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Error, verifique asistente o estado");
        }
    }//GEN-LAST:event_button_actualizarMouseClicked

    private void button_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_buscarMouseClicked
        contador = 0;
        String id = txt_idp.getText();
        if (!id.equals("")) {
            try {
                if (!id.equals("")) {
                    DefaultTableModel modelo = new DefaultTableModel();
                    this.table_usuarios.setModel(modelo);

                    Connection miCon;
                    miCon = (new ConexionBD()).conectar();
                    String sql = "select cita.id_cita, cita.nom_cliente as \"nom. cliente\", cita.no_tel as \"no. teléfono\", cita.hora, cita.fecha, cita.cabina,cita.status as estado, cita.asistente as \"asistente \", cita.comentarios, det_cita.servicio from cita inner join det_cita on cita.id_cita=det_cita.id_cita  where cita.id_cita="+id+" order by cita.id_cita desc";

                    Statement stmt = miCon.createStatement();
                    ResultSet r = stmt.executeQuery(sql);
                    ResultSetMetaData rsMd = r.getMetaData();
                    int cantidadColumnas = rsMd.getColumnCount();

                    for (int i = 1; i <= cantidadColumnas; i++) {
                        modelo.addColumn(rsMd.getColumnLabel(i));
                    }
                    while (r.next()) {
                        Object[] fila = new Object[cantidadColumnas];
                        for (int i = 0; i < cantidadColumnas; i++) {
                            fila[i] = r.getObject(i + 1);
                        }
                        modelo.addRow(fila);
                    }

                    String cComen = "";
                    cComen = (String) table_usuarios.getValueAt(0, 8);
                    txt_comen.setText(cComen);

                    txt_idp.setText("");
                    r.close();
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Conexión Fallida" + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Busque por id");
        }
    }//GEN-LAST:event_button_buscarMouseClicked

    private void button_verTodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_verTodoMouseClicked
        contador = 0;
        actualizar();
    }//GEN-LAST:event_button_verTodoMouseClicked

    private void button_regresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_regresarMouseClicked
        back = new principalAdmin();
        back.setVisible(true);
        this.setVisible(false);
        back.nombre(Lbusu.getText());
    }//GEN-LAST:event_button_regresarMouseClicked

    private void txt_nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nomActionPerformed

    private void cmbmesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbmesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbmesActionPerformed

    private void txt_noKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_noKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_noKeyTyped

    private void txt_idpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idpActionPerformed

    private void txt_asisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_asisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_asisActionPerformed
    public boolean Recorre(String r) {
        for (int i = 0; i < table_usuarios.getRowCount(); i++) {
            if (r.equals(table_usuarios.getValueAt(i, 0))) {
                return true;
            }
        }
        return false;
    }
    private void button_buscar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_buscar1MouseClicked
        
        String servicio = "" + comboServicios.getSelectedItem() + "";

        Connection miCon;
        miCon = (new ConexionBD()).conectar();
        DefaultTableModel modelo = (DefaultTableModel) table_usuarios.getModel();
        if (contador == 0) {
            modelo.setRowCount(0);
        }

        modelo.setColumnCount(1);
        JTableHeader th = table_usuarios.getTableHeader();
        TableColumnModel tcm = th.getColumnModel();
        TableColumn tc = tcm.getColumn(0);
        tc.setHeaderValue("Servicio");
        th.repaint();

        contador++;

        if (miCon != null) {
            if(c==0){
              try {
                    Object reg[] = {
                        servicio
                    };
                    modelo.addRow(reg);
                    System.out.println(c);
                    c++;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Conexión Fallida " + e.getMessage());
                }
            }else{
                System.out.println("g"+Recorre(servicio));
            if (!Recorre(servicio)) {
                try {
                    Object reg[] = {
                        servicio
                    };
                    modelo.addRow(reg);
                    
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Conexión Fallida" + e.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione otro servicio");
            }
            }
        }
        
    }//GEN-LAST:event_button_buscar1MouseClicked

    private void button_registrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_registrarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_button_registrarMouseEntered

    private void button_buscar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_buscar2MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) table_usuarios.getModel();
        modelo.removeRow(l);
    }//GEN-LAST:event_button_buscar2MouseClicked

    private void txt_idpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idpKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_idpKeyTyped

    private void button_verTodo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_verTodo1MouseClicked
        ir = new SesionesAdmin();
        ir.setVisible(true);
        this.setVisible(false);
        ir.nombre(Lbusu.getText());
    }//GEN-LAST:event_button_verTodo1MouseClicked
    public void actualizar() {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            this.table_usuarios.setModel(modelo);

            Connection miCon;
            miCon = (new ConexionBD()).conectar();

            String sql = "select cita.id_cita, cita.nom_cliente as \"nom. cliente\", cita.no_tel as \"no. teléfono\", cita.hora, cita.fecha, cita.cabina,cita.status as estado, cita.asistente as \"asistente \", cita.comentarios, det_cita.servicio from cita inner join det_cita on cita.id_cita=det_cita.id_cita  order by cita.id_cita desc";
            Statement stmt = miCon.createStatement();
            ResultSet r = stmt.executeQuery(sql);

            ResultSetMetaData rsMd = r.getMetaData();

            int cantidadColumnas = rsMd.getColumnCount();

            for (int i = 1; i <= cantidadColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            while (r.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = r.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            r.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Conexión Fallida" + e.getMessage());
        }
    }

    public void llenarCB() throws SQLException {
        Connection miCon;
        miCon = (new ConexionBD()).conectar();
        String sql = "select nombre from servicios";
        Statement stmt = miCon.createStatement();
        ResultSet r = stmt.executeQuery(sql);
        comboServicios.removeAllItems(); //Vaciamos el JComboBox
        ArrayList<String> resultat = new ArrayList<String>();
        while (r.next()) {
            resultat.add(r.getString("nombre"));//nombre es el campo de la base de datos
//Metemos el resultado de la tabla en el ArrayList
        }
        for (int i = 0; i < resultat.size(); i++) {
            comboServicios.addItem(resultat.get(i));
        }
        r.close();
        stmt.close();
    }

    public String verificar(String a, int c) {
        String sql = "";
        if (!a.equals("") && c != 0) {
            return sql = "UPDATE cita SET asistente='" + a + "',status ='" + comboEstado.getSelectedItem() + "' WHERE ID_cita=";
        }
        if (a.equals("") && c != 0) {
            return sql = "UPDATE cita SET status ='" + comboEstado.getSelectedItem() + "' WHERE ID_cita=";
        }
        return sql = "UPDATE cita SET asistente='" + a + "' WHERE ID_cita=";
    }

    public void rellenarC() {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            this.table_usuarios.setModel(modelo);
            Connection miCon;
            miCon = (new ConexionBD()).conectar();
            String sql = "SELECT * FROM clientes";
            Statement stmt = miCon.createStatement();
            ResultSet r = stmt.executeQuery(sql);
            ResultSetMetaData rsMd = r.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();
            for (int i = 1; i <= cantidadColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            while (r.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = r.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            r.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Conexión Fallida" + e.getMessage());

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CitasAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CitasAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CitasAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CitasAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CitasAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lbusu;
    private javax.swing.JButton button_actualizar;
    private javax.swing.JButton button_buscar;
    private javax.swing.JButton button_buscar1;
    private javax.swing.JButton button_buscar2;
    private javax.swing.JButton button_eliminar;
    private javax.swing.JButton button_registrar;
    private javax.swing.JButton button_regresar;
    private javax.swing.JButton button_verTodo;
    private javax.swing.JButton button_verTodo1;
    private javax.swing.JComboBox<String> cmbanio;
    private javax.swing.JComboBox<String> cmbdia;
    private javax.swing.JComboBox<String> cmbmes;
    private javax.swing.JComboBox<String> comboAm;
    private javax.swing.JComboBox<String> comboDos;
    private javax.swing.JComboBox<String> comboEstado;
    private javax.swing.JComboBox<String> comboServicios;
    private javax.swing.JComboBox<String> comboUno;
    private javax.swing.JComboBox<String> combocabina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table_usuarios;
    private javax.swing.JTextField txt_asis;
    private javax.swing.JTextArea txt_comen;
    private javax.swing.JTextField txt_idp;
    private javax.swing.JTextField txt_no;
    private javax.swing.JTextField txt_nom;
    // End of variables declaration//GEN-END:variables
}
