/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prototipospa;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lis_h
 */
public class CertificadosAsistente extends javax.swing.JFrame {

    principalAdmin back;

    /**
     * Creates new form InventarioAdmin
     */
    public CertificadosAsistente() {
        initComponents();
        actualizar();
        setLocationRelativeTo(null);
        calendario.setDate(GregorianCalendar.getInstance().getTime());
        calendario1.setDate(GregorianCalendar.getInstance().getTime());

    }

/*    CertificadosAsistente() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
      public void nombre(String u) {
        Lbusu.setText(u);
        Lbusu.setVisible(false);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txt_de = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_usuarios = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        button_registrar = new javax.swing.JButton();
        button_eliminar = new javax.swing.JButton();
        button_actualizar = new javax.swing.JButton();
        button_buscar = new javax.swing.JButton();
        button_verTodo = new javax.swing.JButton();
        button_regresar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_para = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_valor = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_idp = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        calendario = new com.toedter.calendar.JDateChooser();
        calendario1 = new com.toedter.calendar.JDateChooser();
        Lbusu = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        comboEstado = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        txt_de.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        table_usuarios.setBackground(new java.awt.Color(255, 102, 0));
        table_usuarios.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        table_usuarios.setForeground(new java.awt.Color(255, 255, 255));
        table_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre producto", "Precio", "Tipo", "Fecha caducidad", "Existencias"
            }
        ));
        table_usuarios.setEnabled(false);
        table_usuarios.setGridColor(new java.awt.Color(0, 102, 51));
        table_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_usuariosMouseClicked(evt);
            }
        });
        table_usuarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_usuariosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table_usuarios);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones para inventario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 14))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(153, 0, 153));
        jPanel1.setInheritsPopupMenu(true);
        jPanel1.setName(""); // NOI18N
        jPanel1.setOpaque(false);

        button_registrar.setBackground(new java.awt.Color(255, 136, 18));
        button_registrar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_registrar.setText("Registrar");
        button_registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_registrarMouseClicked(evt);
            }
        });
        button_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_registrarActionPerformed(evt);
            }
        });
        button_registrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                button_registrarKeyReleased(evt);
            }
        });
        jPanel1.add(button_registrar);

        button_eliminar.setBackground(new java.awt.Color(255, 136, 18));
        button_eliminar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_eliminar.setText("Eliminar");
        button_eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_eliminarMouseClicked(evt);
            }
        });
        jPanel1.add(button_eliminar);

        button_actualizar.setBackground(new java.awt.Color(255, 136, 18));
        button_actualizar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_actualizar.setText("Actualizar");
        button_actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_actualizarMouseClicked(evt);
            }
        });
        jPanel1.add(button_actualizar);

        button_buscar.setBackground(new java.awt.Color(255, 136, 18));
        button_buscar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_buscar.setText("Buscar");
        button_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_buscarMouseClicked(evt);
            }
        });
        jPanel1.add(button_buscar);

        button_verTodo.setBackground(new java.awt.Color(255, 136, 18));
        button_verTodo.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_verTodo.setText("Ver Todo");
        button_verTodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_verTodoMouseClicked(evt);
            }
        });
        jPanel1.add(button_verTodo);

        button_regresar.setBackground(new java.awt.Color(255, 136, 18));
        button_regresar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_regresar.setText("Regresar");
        button_regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_regresarMouseClicked(evt);
            }
        });
        jPanel1.add(button_regresar);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 36)); // NOI18N
        jLabel5.setText("Certificados");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setText("De");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/logoBueno.jpg"))); // NOI18N

        txt_para.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setText("Para");

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel9.setText("Fecha expedici√≥n");

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel10.setText("Valor");

        txt_valor.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_valorKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel11.setText("ID Certificado");

        txt_idp.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_idp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_idpKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel12.setText("Fecha vencimiento");

        Lbusu.setText("jLabel2");

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel13.setText("Estado");

        comboEstado.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        comboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija", "Pendiente", "Cobrado", "Vencido", " " }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(176, 176, 176))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_de, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(txt_valor, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(calendario1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_para, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(calendario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(132, 132, 132))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Lbusu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_idp, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12)
                            .addComponent(jLabel6)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(20, 20, 20)
                                .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(181, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(Lbusu)
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_de, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txt_para, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(calendario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_idp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_idpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idpKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        //48-57
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese s√≥lo n√∫meros", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idpKeyTyped

    private void txt_valorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_valorKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada
        //48-57
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese s√≥lo n√∫meros", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }          // TODO add your handling code here:
    }//GEN-LAST:event_txt_valorKeyTyped

    private void button_regresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_regresarMouseClicked
         back = new principalAdmin();
        back.setVisible(true);
        this.setVisible(false);
        back.nombre(Lbusu.getText());
    }//GEN-LAST:event_button_regresarMouseClicked

    private void button_verTodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_verTodoMouseClicked
        actualizar();
    }//GEN-LAST:event_button_verTodoMouseClicked

    private void button_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_buscarMouseClicked
        String id = txt_idp.getText();
        if (!id.equals("")) {
            try {

                if (!id.equals("")) {
                    DefaultTableModel modelo = new DefaultTableModel();
                    this.table_usuarios.setModel(modelo);

                    Connection miCon;
                    miCon = (new ConexionBD()).conectar();
                    String sql = "select id_certificado as \"ID certificado\", de as \"De\", para as \"Para\", fecha_exp as \"Fecha expedici√≥n\", fecha_ven as \"Fecha vencimiento\", valor as \"Valor\", estado as \"Estado\" from certificados WHERE id_certificado='" + id + "'";
                    Statement stmt = miCon.createStatement();
                    ResultSet r = stmt.executeQuery(sql);
                    // stmt.close();

                    ResultSetMetaData rsMd = r.getMetaData();

                    int cantidadColumnas = rsMd.getColumnCount();

                    for (int i = 1; i <= cantidadColumnas; i++) {
                        modelo.addColumn(rsMd.getColumnLabel(i));
                    }

                    while (r.next()) {
                        Object[] fila = new Object[cantidadColumnas];
                        for (int i = 0; i < cantidadColumnas; i++) {
                            fila[i] = r.getObject(i + 1);
                        }
                        modelo.addRow(fila);
                    }
                    txt_idp.setText("");
                    r.close();
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Conexi√≥n Fallida" + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Busque por id");
        }
    }//GEN-LAST:event_button_buscarMouseClicked

    private void button_actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_actualizarMouseClicked
        String id = txt_idp.getText();
        String valor = txt_valor.getText();
          String estado = "" + comboEstado.getSelectedItem() + "";
        int response = JOptionPane.showConfirmDialog(this, "¬øEsta seguro que desea actualizar ?", "ATENCI√ìN",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        switch (response) {
            case JOptionPane.NO_OPTION:
                break;
            case JOptionPane.YES_OPTION:
                Connection miCon;
                miCon = (new ConexionBD()).conectar();
                if (!id.equals("")) {
                    if (comboEstado.getSelectedIndex() != 0) {
                        if (miCon != null) {
                            try {
                                String sql = "UPDATE certificados SET estado=' " + estado + "' WHERE id_certificado='" + id + "'";
                                try (Statement stmt = miCon.createStatement()) {
                                    stmt.executeUpdate(sql);
                                    stmt.close();
                                    JOptionPane.showMessageDialog(this, "Actualizado correctamente");
                                }
                            } catch (SQLException e) {
                                JOptionPane.showMessageDialog(this, "Error " + e.getMessage());
                            }
                        }
                        txt_idp.setText("");
                        txt_valor.setText("");
                    } else {
                        JOptionPane.showMessageDialog(this, "Error, seleccione el estado a actualizar");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Error, actualice el valor por ID");
                }
                actualizar();
                break;
            case JOptionPane.CLOSED_OPTION:
                break;
            default:
                break;
        }
    }//GEN-LAST:event_button_actualizarMouseClicked

    private void button_eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_eliminarMouseClicked
        String idp = txt_idp.getText();
        String nv2 = "";
        int response = JOptionPane.showConfirmDialog(this, "¬øEsta seguro que desea eliminar el certificado?", "ATENCI√ìN",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        switch (response) {
            case JOptionPane.NO_OPTION:
                break;
            case JOptionPane.YES_OPTION:
                Connection miCon,
                 miCon2,
                 miCon3;
                miCon = (new ConexionBD()).conectar();
                miCon2 = (new ConexionBD()).conectar();
                miCon3 = (new ConexionBD()).conectar();
                String nv1 = "";
                if (!idp.equals("")) {
                    if (miCon != null) {
                        try {

                            String sql1 = "SELECT valor FROM certificados WHERE ID_certificado=" + idp;
                            Statement stmt1 = miCon.createStatement();
                            ResultSet r1 = stmt1.executeQuery(sql1);
                            // ResultSetMetaData rmeta=r1.getMetaData(); 
                            r1.next();
                            nv1 = r1.getString("valor");
                            System.out.println(nv1 + "sirve plis");

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(this, "Verifique la informaci√≥n", "Error",
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    if (miCon2 != null) {
                        try {


                            String sql = "DELETE FROM certificados WHERE ID_certificado=" + "'" + idp + "'";
                            Statement stmt = miCon.createStatement();
                            stmt.executeUpdate(sql);
                            // stmt.close();
                            JOptionPane.showMessageDialog(this, "Eliminado con √©xito");


                            String antes = "select dinero as \"antes\" from caja where id_caja=1";
                            Statement stmt2 = miCon2.createStatement();
                            ResultSet r2 = stmt2.executeQuery(antes);
                            r2.next();
                            String nv3 = r2.getString("antes");
                            //stmt2.close();

                            float guardar = Float.parseFloat(nv3) - Float.parseFloat(nv1);
                            System.out.println(guardar);
                            // din.setText("" + guardar);
                            System.out.println("antes update");
                            String sql2 = "UPDATE caja SET dinero= " + guardar + " where id_caja=1";
                            Statement stmt3 = miCon2.createStatement();
                            stmt3.executeUpdate(sql2);
                            stmt2.close();
                            stmt3.close();
                            JOptionPane.showMessageDialog(this, "Dinero actualizado en caja ");
                        } catch (NumberFormatException | SQLException e) {
                            JOptionPane.showMessageDialog(this, " " + e.getMessage());
                        }
                    }
                    /*  if (miCon3 != null) {
                        try {
                            System.out.println("Antes del select valor");
                            String sql1 = "select valor from certificados where id_certificado = '" + idp + "' ";
                            Statement stmt1 = miCon2.createStatement();
                            ResultSet r1 = stmt1.executeQuery(sql1);
                            r1.next();
                            System.out.println("Antes del select valor 2");
                            nv2 = r1.getString("valor");
                            System.out.println("Antes del select dinero");

                            String antes = "select dinero as \"antes\" from caja where id_caja=1";
                            Statement stmt2 = miCon2.createStatement();
                            ResultSet r2 = stmt2.executeQuery(antes);
                            r2.next();
                            String nv1 = r2.getString("antes");
                            //stmt2.close();

                            float guardar = Integer.parseInt(nv1) - Integer.parseInt(nv2);
                            System.out.println(guardar);
                            // din.setText("" + guardar);
                            System.out.println("antes update");
                            String sql2 = "UPDATE caja SET dinero= " + guardar + " where id_caja=1";
                            Statement stmt3 = miCon2.createStatement();
                            stmt3.executeUpdate(sql2);
                            stmt2.close();
                            stmt3.close();

                            JOptionPane.showMessageDialog(this, "Dinero registrado en caja ");
                        } catch (NumberFormatException | SQLException e) {
                            JOptionPane.showMessageDialog(this, " " + e.getMessage());
                        }
                    }*/
                    txt_idp.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Error, ingrese el id a eliminar");
                }
                actualizar();
                txt_idp.setText("");
                break;
            case JOptionPane.CLOSED_OPTION:
                break;
            default:
                break;
        }
    }//GEN-LAST:event_button_eliminarMouseClicked

    private void button_registrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_registrarKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_button_registrarKeyReleased

    private void button_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_registrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button_registrarActionPerformed

    private void button_registrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_registrarMouseClicked
         String de = txt_de.getText();
        String fechaE = new SimpleDateFormat("yyyy/MM/dd").format(calendario1.getDate());
        String fechaV = new SimpleDateFormat("yyyy/MM/dd").format(calendario.getDate());
        String para = txt_para.getText();
       // float valor = Float.parseFloat(txt_valor.getText());
        String valor2=txt_valor.getText();
         String estado = "" + comboEstado.getSelectedItem() + "";
        int response = JOptionPane.showConfirmDialog(this, "De: " + de + "\nPara: " + para + "\nValor: " + valor2 + "\nFecha expedido: " + fechaE + "\nFecha expira: " + fechaV + "\n¬øSon los datos correctos?", "ATENCI√ìN",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        switch (response) {
            case JOptionPane.NO_OPTION:
                break;
            case JOptionPane.YES_OPTION:
                Connection miCon,
                 miCon2;
                miCon = (new ConexionBD()).conectar();
                miCon2 = (new ConexionBD()).conectar();
                if (!de.equals("") && !para.equals("") && !valor2.equals("")) {
                    if (comboEstado.getSelectedIndex() != 0) {
                    if (miCon != null) {
                        try {

                            String sql = "INSERT INTO certificados (de, para, valor,FECHA_exp,FECHA_ven,estado) VALUES ('" + de + "'" + ",'" + para + "','" + valor2 + "','" + fechaE + "','" + fechaV + "','" + estado + "')";
                            Statement stmt = miCon.createStatement();
                            stmt.executeUpdate(sql);
                            stmt.close();
                            JOptionPane.showMessageDialog(this, "Registrado correctamente");

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(this, "Verifique la informaci√≥n a insertar", "Error",
                                    JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    if (miCon2 != null) {
                        try {

                            String antes = "select dinero as \"despues\" from caja where id_caja=(SELECT MAX(id_caja) FROM caja)";
                            Statement stmt2 = miCon.createStatement();
                            ResultSet r2 = stmt2.executeQuery(antes);
                            r2.next();
                            String nv1 = r2.getString("despues");
                            stmt2.close();

                            float guardar = Float.parseFloat(nv1) +Float.parseFloat(valor2);
                            System.out.println(guardar);
                            // din.setText("" + guardar);
                            System.out.println("antes update");
                            String sql2 = "UPDATE caja SET dinero= " + guardar + " where id_caja=1";
                            Statement stmt3 = miCon.createStatement();
                            stmt3.executeUpdate(sql2);
                            stmt3.close();

                            JOptionPane.showMessageDialog(this, "Dinero registrado en caja ");
                        } catch (NumberFormatException | SQLException e) {
                            JOptionPane.showMessageDialog(this, " " + e.getMessage());
                        }
                    }
                    txt_de.setText("");
                    txt_para.setText("");
                    txt_valor.setText("");
                    } else {
                    JOptionPane.showMessageDialog(this, "Error, seleccionar estado del certificado");
                }
                } else {
                    JOptionPane.showMessageDialog(this, "Error, no dejar campos vac√≠os");
                }
                actualizar();

                break;
            case JOptionPane.CLOSED_OPTION:
                break;
            default:
                break;
        }
    }//GEN-LAST:event_button_registrarMouseClicked

    private void table_usuariosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_usuariosKeyReleased

    }//GEN-LAST:event_table_usuariosKeyReleased

    private void table_usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_usuariosMouseClicked

    }//GEN-LAST:event_table_usuariosMouseClicked
    public String verificar(String s, String p) {
        String sql;
        if (!s.equals("") && !p.equals("")) {
            return sql = "UPDATE PRODUCTO SET EXISTENCIAS=" + s + ",PRECIO =" + p + " WHERE ID_PRODUCTO=";
        }
        if (s.equals("") && !p.equals("")) {
            return sql = "UPDATE PRODUCTO SET PRECIO =" + p + " WHERE ID_PRODUCTO=";
        }
        return sql = "UPDATE PRODUCTO SET EXISTENCIAS=" + s + " WHERE ID_PRODUCTO=";
    }

    public void actualizar() {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            this.table_usuarios.setModel(modelo);

            Connection miCon;
            miCon = (new ConexionBD()).conectar();

            String sql = "select id_certificado as \"ID Certificado\", de as \"De\", para as \"Para\",fecha_exp as \"Expedido\", fecha_ven as \"Vencimiento\", valor as \"Valor de\", estado as \"Estado\"  from certificados  order by id_certificado desc";
            Statement stmt = miCon.createStatement();
            ResultSet r = stmt.executeQuery(sql);

            ResultSetMetaData rsMd = r.getMetaData();

            int cantidadColumnas = rsMd.getColumnCount();

            for (int i = 1; i <= cantidadColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            while (r.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = r.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            r.close();
            stmt.close();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Conexi√≥n Fallida" + ex.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CertificadosAsistente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CertificadosAsistente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CertificadosAsistente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CertificadosAsistente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CertificadosAsistente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lbusu;
    private javax.swing.JButton button_actualizar;
    private javax.swing.JButton button_buscar;
    private javax.swing.JButton button_eliminar;
    private javax.swing.JButton button_registrar;
    private javax.swing.JButton button_regresar;
    private javax.swing.JButton button_verTodo;
    private com.toedter.calendar.JDateChooser calendario;
    private com.toedter.calendar.JDateChooser calendario1;
    private javax.swing.JComboBox<String> comboEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_usuarios;
    private javax.swing.JTextField txt_de;
    private javax.swing.JTextField txt_idp;
    private javax.swing.JTextField txt_para;
    private javax.swing.JTextField txt_valor;
    // End of variables declaration//GEN-END:variables
}
