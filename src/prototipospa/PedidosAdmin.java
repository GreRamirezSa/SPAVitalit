/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prototipospa;

//import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author lis_h
 */
public class PedidosAdmin extends javax.swing.JFrame {

    ProductAdmin pPedidos;
    int contador = 0;
    private int l;

    /**
     * Creates new form PedidosAdmin
     */
    public PedidosAdmin() {
        initComponents();
        actualizar();
        fechaG();

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public void nombre(String u) {
        Lbusu.setText(u);
        Lbusu.setVisible(false);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_usuarios = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        button_registrar = new javax.swing.JButton();
        button_eliminar = new javax.swing.JButton();
        button_buscar = new javax.swing.JButton();
        button_actualizar = new javax.swing.JButton();
        button_verTodo = new javax.swing.JButton();
        button_regresar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_produc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_cantidad = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_preCompra = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_preVenta = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cmbanio = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        cmbmes = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        cmbdia = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        txt_idp = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txt_realizado = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        button_agregar = new javax.swing.JButton();
        button_eliminar1 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        toc = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        tov = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        comboEstado = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        txt_no = new javax.swing.JTextField();
        Lbusu = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        table_usuarios.setBackground(new java.awt.Color(255, 102, 0));
        table_usuarios.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        table_usuarios.setForeground(new java.awt.Color(255, 255, 255));
        table_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad", "Precio Compra", "Precio Venta"
            }
        ));
        table_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_usuariosMouseClicked(evt);
            }
        });
        table_usuarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_usuariosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table_usuarios);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones para pedidos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 14))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(153, 0, 153));
        jPanel1.setInheritsPopupMenu(true);
        jPanel1.setName(""); // NOI18N
        jPanel1.setOpaque(false);

        button_registrar.setBackground(new java.awt.Color(255, 136, 18));
        button_registrar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_registrar.setText("Registrar");
        button_registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_registrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_registrarMouseEntered(evt);
            }
        });
        button_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_registrarActionPerformed(evt);
            }
        });
        button_registrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                button_registrarKeyReleased(evt);
            }
        });
        jPanel1.add(button_registrar);

        button_eliminar.setBackground(new java.awt.Color(255, 136, 18));
        button_eliminar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_eliminar.setText("Eliminar");
        button_eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_eliminarMouseClicked(evt);
            }
        });
        jPanel1.add(button_eliminar);

        button_buscar.setBackground(new java.awt.Color(255, 136, 18));
        button_buscar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_buscar.setText("Buscar");
        button_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_buscarMouseClicked(evt);
            }
        });
        jPanel1.add(button_buscar);

        button_actualizar.setBackground(new java.awt.Color(255, 136, 18));
        button_actualizar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_actualizar.setText("Actualizar");
        button_actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_actualizarMouseClicked(evt);
            }
        });
        jPanel1.add(button_actualizar);

        button_verTodo.setBackground(new java.awt.Color(255, 136, 18));
        button_verTodo.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_verTodo.setText("Ver Todo");
        button_verTodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_verTodoMouseClicked(evt);
            }
        });
        jPanel1.add(button_verTodo);

        button_regresar.setBackground(new java.awt.Color(255, 136, 18));
        button_regresar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_regresar.setText("Regresar");
        button_regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_regresarMouseClicked(evt);
            }
        });
        jPanel1.add(button_regresar);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 36)); // NOI18N
        jLabel5.setText("Pedidos");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/logoBueno.jpg"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setText("Fecha de entrega");

        txt_produc.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_produc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_producKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setText("Producto");

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel10.setText("Cantidad");

        txt_cantidad.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cantidadKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel11.setText("Precio de compra");

        txt_preCompra.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_preCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_preCompraKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel12.setText("Precio de venta");

        txt_preVenta.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_preVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_preVentaKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 0, 10)); // NOI18N
        jLabel13.setText("Año");

        cmbanio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900" }));

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 0, 10)); // NOI18N
        jLabel14.setText("Mes");

        cmbmes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cmbmes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbmesActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 0, 10)); // NOI18N
        jLabel15.setText("Día");

        cmbdia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel16.setText("ID Pedido");

        txt_idp.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_idp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_idpKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel17.setText("Pedido realizado por");

        txt_realizado.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_realizado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_realizadoKeyTyped(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(51, 51, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones para producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 14))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(153, 0, 153));
        jPanel3.setInheritsPopupMenu(true);
        jPanel3.setName(""); // NOI18N
        jPanel3.setOpaque(false);

        button_agregar.setBackground(new java.awt.Color(255, 136, 18));
        button_agregar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_agregar.setText("Agregar");
        button_agregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_agregarMouseClicked(evt);
            }
        });
        button_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_agregarActionPerformed(evt);
            }
        });
        button_agregar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                button_agregarKeyReleased(evt);
            }
        });
        jPanel3.add(button_agregar);

        button_eliminar1.setBackground(new java.awt.Color(255, 136, 18));
        button_eliminar1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_eliminar1.setText("Eliminar");
        button_eliminar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_eliminar1MouseClicked(evt);
            }
        });
        jPanel3.add(button_eliminar1);

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel18.setText("Total compra");

        toc.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        toc.setForeground(new java.awt.Color(252, 0, 0));
        toc.setText("0");

        jLabel19.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel19.setText("Total venta");

        tov.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tov.setForeground(new java.awt.Color(252, 0, 0));
        tov.setText("0");

        jLabel20.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel20.setText("Estado");

        comboEstado.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        comboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija", "Pendiente", "Entregado", "Cancelado", " " }));

        jLabel21.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel21.setText("No. teléfono");

        txt_no.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_noKeyTyped(evt);
            }
        });

        Lbusu.setText("jLabel2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(360, 360, 360))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(94, 94, 94)
                                        .addComponent(txt_produc, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel12))
                                        .addGap(29, 29, 29)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txt_cantidad, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_preCompra, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_preVenta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(20, 20, 20)
                                .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel13))
                                    .addComponent(jLabel21))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_no, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(cmbanio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cmbmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbdia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txt_realizado, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Lbusu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_idp, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(toc, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(tov, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_idp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(toc, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_no, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tov, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Lbusu)
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txt_produc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_preCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_preVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbdia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbanio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_realizado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void table_usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_usuariosMouseClicked
        l = table_usuarios.getSelectedRow();
    }//GEN-LAST:event_table_usuariosMouseClicked

    private void table_usuariosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_usuariosKeyReleased

    }//GEN-LAST:event_table_usuariosKeyReleased
    public String fMes(int m) {
        if (m < 10) {
            String mB = "";
            return mB = "0" + m;
        } else {
            return m + "";
        }
    }

    public String fDia(int d) {
        if (d < 10) {
            String dB = "";
            return dB = "0" + d;
        } else {
            return d + "";
        }
    }

    public void sumaC() {
        float total = 0;
        DefaultTableModel modelo = (DefaultTableModel) table_usuarios.getModel();
        total = 0;
        for (int i = 0; i < modelo.getRowCount(); i++) {
            total = (total + Float.parseFloat(modelo.getValueAt(i, 1) + "") * Float.parseFloat(modelo.getValueAt(i, 2) + ""));
        }
        toc.setText((total) + "");
    }

    public void sumaV() {
        float total = 0;
        DefaultTableModel modelo = (DefaultTableModel) table_usuarios.getModel();
        total = 0;
        for (int i = 0; i < modelo.getRowCount(); i++) {
            total = (total + Float.parseFloat(modelo.getValueAt(i, 1) + "") * Float.parseFloat(modelo.getValueAt(i, 3) + ""));
        }
        tov.setText((total) + "");
    }
    private void button_registrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_registrarMouseClicked
        //tov.setText("0");
        //toc.setText("0");
        Calendar c = Calendar.getInstance();

        String dia = Integer.toString(c.get(Calendar.DATE));
        String mes = Integer.toString(c.get(Calendar.MONTH));
        String annio = Integer.toString(c.get(Calendar.YEAR));
        String estado = "" + comboEstado.getSelectedItem() + "";

        int m = Integer.parseInt(mes) + 1;
        int d = Integer.parseInt(dia);

        String fecha = annio + "-" + fMes(m) + "-" + fDia(d);

        System.out.println(dia + " " + mes + " " + annio + " ");

        System.out.println(fecha + "esta es la fecha buena");

        String realizado = txt_realizado.getText();
        String no = txt_no.getText();

        String fechaE = "" + cmbanio.getSelectedItem() + "-" + cmbmes.getSelectedItem() + "-" + cmbdia.getSelectedItem() + "";

        int response = JOptionPane.showConfirmDialog(this, "¿Desea registrar?", "ATENCIÓN",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        switch (response) {
            case JOptionPane.NO_OPTION:
                break;
            case JOptionPane.YES_OPTION:
                Connection miCon,
                 miCon2,
                 miCon4;
                miCon = (new ConexionBD()).conectar();
                miCon2 = (new ConexionBD()).conectar();
                miCon4 = (new ConexionBD()).conectar();
                if (!realizado.equals("") && !no.equals("")) {

                    if (comboEstado.getSelectedIndex() != 0) {
                        if (table_usuarios.getColumnCount() <= 4) {
                            float preC = Float.parseFloat(toc.getText());
                            float preV = Float.parseFloat(tov.getText());
                            if (table_usuarios.getColumnCount() == 4 && table_usuarios.getRowCount() > 0) {

                                if (miCon4 != null) {
                                    try {
                                        miCon4 = (new ConexionBD()).conectar();
                                        String sql4 = "select no_tel from clientes where no_tel='" + no + "'";
                                        Statement stmt4 = miCon.createStatement();
                                        ResultSet r4 = stmt4.executeQuery(sql4);
                                        if (r4.next()) {
                                            if (miCon != null) {
                                                try {
                                                    String sql = "insert into pedidos (fecha_entrega,usuario,total_c,fecha_pide,total_v,status,tel)  values ('" + fechaE + "','" + realizado + "','" + preC + "','" + fecha + "','" + preV + "','" + estado + "','" + no + "')";
                                                    Statement stmt = miCon.createStatement();
                                                    stmt.executeUpdate(sql);

                                                    String nv = "select max(id_pedido) as \"maximo\" from pedidos";
                                                    ResultSet r = stmt.executeQuery(nv);
                                                    r.next();
                                                    String nv1 = r.getString("maximo");
                                                    System.out.println(nv1);

                                                    for (int i = 0; i < table_usuarios.getRowCount(); i++) {
                                                        String sql2 = "insert into det_pedido (id_pedido,nom_produc,cantidad,precio_compra,precio_venta)values(" + nv1 + ",'" + table_usuarios.getValueAt(i, 0) + "','" + table_usuarios.getValueAt(i, 1) + "','" + table_usuarios.getValueAt(i, 2) + "','" + table_usuarios.getValueAt(i, 3) + "')";
                                                        stmt.executeUpdate(sql2);
                                                    }
                                                    DefaultTableModel modelo = (DefaultTableModel) table_usuarios.getModel();
                                                    modelo.setRowCount(0);
                                                    toc.setText("0");
                                                    tov.setText("0");
                                                    JOptionPane.showMessageDialog(this, "Exito al insertar");
                                                } catch (SQLException e) {
                                                    JOptionPane.showMessageDialog(this, "Agregar productos al pedido", "Error",
                                                            JOptionPane.ERROR_MESSAGE);
                                                }

                                            }
                                            comboEstado.setSelectedIndex(0);
                                            txt_realizado.setText("");
                                            txt_no.setText("");
                                            contador = 0;
                                        } else {
                                            JOptionPane.showMessageDialog(this, "Error, no existe el número  ");
                                        }

                                    } catch (SQLException e) {
                                        JOptionPane.showMessageDialog(this, "Error  " + e.getMessage());
                                    }

                                }

                            }//ultimo if 
                            else {
                                JOptionPane.showMessageDialog(this, "Error, agregue productos al pedido");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Error, agregue productos al pedido");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Error, seleccionar el estado del pedido");
                    }

                }//if de no vacios
                else {
                    JOptionPane.showMessageDialog(this, "Error, revisar asistente y número de teléfono");
                }//else de mi primer if
                // actualizar();
                break;

            case JOptionPane.CLOSED_OPTION:
                break;
            default:
                break;
        }
    }//GEN-LAST:event_button_registrarMouseClicked

    private void button_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_registrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button_registrarActionPerformed

    private void button_registrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_registrarKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_button_registrarKeyReleased

    private void button_eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_eliminarMouseClicked
        toc.setText("0");
        tov.setText("0");
        contador = 0;
        String idp = txt_idp.getText();
        int response = JOptionPane.showConfirmDialog(this, "¿Esta seguro que desea eliminar el pedido?", "ATENCIÓN",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        switch (response) {
            case JOptionPane.NO_OPTION:
                break;
            case JOptionPane.YES_OPTION:
                Connection miCon,
                 miCon2;
                miCon = (new ConexionBD()).conectar();
                miCon2 = (new ConexionBD()).conectar();
                if (!idp.equals("")) {
                    if (miCon != null) {
                        try {
                            String sql = "DELETE FROM det_pedido WHERE ID_pedido=" + "'" + idp + "'";

                            Statement stmt = miCon.createStatement();
                            stmt.executeUpdate(sql);

                            txt_idp.setText("");
                            JOptionPane.showMessageDialog(this, "Eliminado con exito");
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, "Conexión Fallida " + e.getMessage());
                        }
                    }

                    if (miCon2 != null) {
                        try {

                            String sql2 = "delete from pedidos where id_pedido =" + "'" + idp + "'";
                            Statement stmt2 = miCon.createStatement();
                            stmt2.executeUpdate(sql2);

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null, "Conexión Fallida" + e.getMessage());
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Error, ingrese el id a eliminar");
                }
                actualizar();

                break;
            case JOptionPane.CLOSED_OPTION:
                break;
            default:
                break;
        }

    }//GEN-LAST:event_button_eliminarMouseClicked

    private void button_actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_actualizarMouseClicked
        toc.setText("0");
        tov.setText("0");

        contador = 0;
        String id = txt_idp.getText();

        String estado = comboEstado.getSelectedItem() + "";

        if (comboEstado.getSelectedIndex() != 0) {
            int response = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea actualizar?", "ATENCIÓN",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            switch (response) {
                case JOptionPane.NO_OPTION:
                    break;
                case JOptionPane.YES_OPTION:
                    Connection miCon;
                    miCon = (new ConexionBD()).conectar();
                    if (!id.equals("")) {
                        if (miCon != null) {
                            try {
                                String sql = "UPDATE pedidos SET status= '" + estado + "' WHERE id_pedido='" + id + "'";
                                Statement stmt = miCon.createStatement();
                                stmt.executeUpdate(sql);
                                JOptionPane.showMessageDialog(this, "Actualización exitosa");
                            } catch (SQLException e) {
                                JOptionPane.showMessageDialog(this, "Error " + e.getMessage());
                            }
                        }
                        txt_idp.setText("");
                        comboEstado.setSelectedIndex(0);
                    } else {
                        JOptionPane.showMessageDialog(this, "Error, ingrese el ID pedido");
                    }//else del primero
                    actualizar();
                case JOptionPane.CLOSED_OPTION:
                    break;
                default:
                    break;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Error, actualice el estado del pedido");
        }
    }//GEN-LAST:event_button_actualizarMouseClicked

    private void button_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_buscarMouseClicked
        toc.setText("0");
        tov.setText("0");

        contador = 0;
        String id = txt_idp.getText();

        if (!id.equals("")) {
            try {

                if (!id.equals("")) {
                    DefaultTableModel modelo = new DefaultTableModel();
                    this.table_usuarios.setModel(modelo);

                    Connection miCon;
                    miCon = (new ConexionBD()).conectar();
                    String sql = "select  pedidos.id_pedido as \"Id pedido\",pedidos.tel as \"Teléfono\",  pedidos.fecha_pide as \"Fecha pide\", pedidos.fecha_entrega as \"Fecha entrega\","
                            + " pedidos.usuario as \"Usuario\", det_pedido.nom_produc as \"Producto\", det_pedido.cantidad as \"Cantidad\", det_pedido.precio_venta as \"Precio venta\", "
                            + "det_pedido.precio_compra as \"Precio compra\",pedidos.total_v as \"Total venta\", pedidos.total_c as \"Total compra\",pedidos.status as \"Estado\" from pedidos inner join det_pedido on pedidos.id_pedido=det_pedido.id_pedido where pedidos.id_pedido ='" + id + "'";
                    Statement stmt = miCon.createStatement();
                    ResultSet r = stmt.executeQuery(sql);

                    ResultSetMetaData rsMd = r.getMetaData();

                    int cantidadColumnas = rsMd.getColumnCount();

                    for (int i = 1; i <= cantidadColumnas; i++) {
                        modelo.addColumn(rsMd.getColumnLabel(i));
                    }

                    while (r.next()) {
                        Object[] fila = new Object[cantidadColumnas];
                        for (int i = 0; i < cantidadColumnas; i++) {
                            fila[i] = r.getObject(i + 1);
                        }
                        modelo.addRow(fila);
                    }
                    txt_idp.setText("");
                    r.close();
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Verifique la información a insertar", "Error",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Busque por id");
        }
    }//GEN-LAST:event_button_buscarMouseClicked

    private void button_verTodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_verTodoMouseClicked
        toc.setText("0");
        tov.setText("0");

        contador = 0;
        actualizar();
    }//GEN-LAST:event_button_verTodoMouseClicked

    private void button_regresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_regresarMouseClicked

        pPedidos = new ProductAdmin();
        pPedidos.setVisible(true);
        this.setVisible(false);
        pPedidos.nombre(Lbusu.getText());
    }//GEN-LAST:event_button_regresarMouseClicked

    private void cmbmesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbmesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbmesActionPerformed

    private void txt_preCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_preCompraKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        //48-57
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 45 || k >= 58 && k <= 64 || k >= 91 && k <= 96 || k == 47) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_preCompraKeyTyped

    private void txt_preVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_preVentaKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        //48-57
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 45 || k >= 58 && k <= 64 || k >= 91 && k <= 96 || k == 47) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_preVentaKeyTyped

    private void txt_cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cantidadKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        //48-57
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_cantidadKeyTyped

    private void txt_idpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_idpKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada

        //48-57
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idpKeyTyped

    private void txt_realizadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_realizadoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_realizadoKeyTyped

    private void button_agregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_agregarMouseClicked
        String producto = txt_produc.getText();
        String cantidad = txt_cantidad.getText();
        String preCompra = txt_preCompra.getText();
        String preVenta = txt_preVenta.getText();
        String realizo = txt_realizado.getText();

        Connection miCon;
        miCon = (new ConexionBD()).conectar();

        if (!producto.equals("") && !cantidad.equals("") && !preCompra.equals("") && !preVenta.equals("")) {
            if (miCon != null) {

                DefaultTableModel modelo = (DefaultTableModel) table_usuarios.getModel();
                //DefaultTableModel modelo = new DefaultTableModel(new Object[]{"Producto","Cantidad", "Precio  compra", "Precio  venta"}, 0);

                if (contador == 0) {
                    modelo.setRowCount(0);
                }

                contador++;
                modelo.setColumnCount(4);

                JTableHeader th = table_usuarios.getTableHeader();
                TableColumnModel tcm = th.getColumnModel();
                TableColumn tc = tcm.getColumn(0);
                tc.setHeaderValue("Producto");
                th.repaint();

                JTableHeader th2 = table_usuarios.getTableHeader();
                TableColumnModel tcm2 = th2.getColumnModel();
                TableColumn tc2 = tcm2.getColumn(1);
                tc2.setHeaderValue("Cantidad");
                th2.repaint();

                JTableHeader th3 = table_usuarios.getTableHeader();
                TableColumnModel tcm3 = th3.getColumnModel();
                TableColumn tc3 = tcm3.getColumn(2);
                tc3.setHeaderValue("Precio  compra");
                th3.repaint();

                JTableHeader th4 = table_usuarios.getTableHeader();
                TableColumnModel tcm4 = th4.getColumnModel();
                TableColumn tc4 = tcm4.getColumn(3);
                tc4.setHeaderValue("Precio  venta");
                th4.repaint();

                /* if((int)table_usuarios.getRowCount()>=4){
                JTableHeader th5 = table_usuarios.getTableHeader();
                TableColumnModel tcm5 = th5.getColumnModel();
                TableColumn tc5 = tcm5.getColumn(4);
                tc5.setHeaderValue( "" );
                th5.repaint();
                JTableHeader th6 = table_usuarios.getTableHeader();
                TableColumnModel tcm6 = th6.getColumnModel();
                TableColumn tc6 = tcm6.getColumn(5);
                tc6.setHeaderValue( "" );
                th6.repaint();
                JTableHeader th7 = table_usuarios.getTableHeader();
                TableColumnModel tcm7 = th7.getColumnModel();
                TableColumn tc7 = tcm7.getColumn(6);
                tc7.setHeaderValue( "" );
                th7.repaint();
                JTableHeader th8 = table_usuarios.getTableHeader();
                TableColumnModel tcm8 = th8.getColumnModel();
                TableColumn tc8 = tcm8.getColumn(7);
                tc8.setHeaderValue( "" );
                th8.repaint();
                JTableHeader th9 = table_usuarios.getTableHeader();
                TableColumnModel tcm9 = th9.getColumnModel();
                TableColumn tc9 = tcm9.getColumn(8);
                tc9.setHeaderValue( "" );
                th9.repaint();
                
                JTableHeader th10 = table_usuarios.getTableHeader();
                TableColumnModel tcm10 = th10.getColumnModel();
                TableColumn tc10 = tcm10.getColumn(9);
                tc10.setHeaderValue( "" );
                th10.repaint();
                JTableHeader th11 = table_usuarios.getTableHeader();
                TableColumnModel tcm11 = th11.getColumnModel();
                TableColumn tc11 = tcm11.getColumn(10);
                tc11.setHeaderValue( "" );
                th11.repaint();
               
                }*/
                try {

                    Object reg[] = {
                        producto,
                        cantidad,
                        //new javax.swing.JButton("brtga"),
                        preCompra,
                        preVenta

                    };
                    modelo.addRow(reg);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error " + e.getMessage());
                }
            }
            sumaC();
            sumaV();
            txt_produc.setText("");
            txt_cantidad.setText("");
            txt_preCompra.setText("");
            txt_preVenta.setText("");
            //txt_realizado.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Error, no deje campos vacíos para agregar producto");
        }
        //Limpiar2();
        // id_p.requestFocus();


    }//GEN-LAST:event_button_agregarMouseClicked

    private void button_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_agregarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button_agregarActionPerformed

    private void button_agregarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_agregarKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_button_agregarKeyReleased

    private void button_eliminar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_eliminar1MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) table_usuarios.getModel();
        modelo.removeRow(l); // TODO add your handling code here:
    }//GEN-LAST:event_button_eliminar1MouseClicked

    private void txt_producKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_producKeyTyped

    }//GEN-LAST:event_txt_producKeyTyped

    private void button_registrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_registrarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_button_registrarMouseEntered

    private void txt_noKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_noKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txt_noKeyTyped

    public String fAnio(int d) {
        if (d < 10) {
            String dB = "";
            return dB = "0" + d;
        } else {
            return d + "";
        }
    }

    public void fechaG() {
        Calendar c = Calendar.getInstance();

        String dia = Integer.toString(c.get(Calendar.DATE));
        String mes = Integer.toString(c.get(Calendar.MONTH));
        String annio = Integer.toString(c.get(Calendar.YEAR));

        int m = Integer.parseInt(mes) + 1;
        int d = Integer.parseInt(dia);
        int a = Integer.parseInt(annio);

        System.out.println();

        String fecha = fAnio(a) + "-" + fMes(m) + "-" + fDia(d);

        System.out.println(dia + " " + mes + " " + annio + " ");

        System.out.println(fecha + "esta es la fecha buena");

    }

    public void suma() {
        float total = 0;
        DefaultTableModel modelo = (DefaultTableModel) table_usuarios.getModel();
        total = 0;
        for (int i = 0; i < modelo.getRowCount(); i++) {
            total = (total + Float.parseFloat(modelo.getValueAt(i, 4) + "") * Float.parseFloat(modelo.getValueAt(i, 5) + ""));
        }
        toc.setText((total) + "");
    }

    public void actualizar() {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            this.table_usuarios.setModel(modelo);

            Connection miCon;
            miCon = (new ConexionBD()).conectar();

            String sql = "select  pedidos.id_pedido as \"ID pedido\", pedidos.fecha_pide as \"Fecha pide\", pedidos.fecha_entrega as \"Fecha entrega\","
                    + " pedidos.usuario as \"Usuario\", pedidos.total_v as \"Total venta\", pedidos.total_c as \"Total compra\", det_pedido.nom_produc as \"Producto\", "
                    + "det_pedido.cantidad as \"Cantidad\", det_pedido.precio_venta as \"Precio venta\", det_pedido.precio_compra as \"Precio compra\","
                    + "pedidos.status as \"Estado\" from pedidos inner join det_pedido on pedidos.id_pedido=det_pedido.id_pedido order by pedidos.id_pedido desc";
            Statement stmt = miCon.createStatement();
            ResultSet r = stmt.executeQuery(sql);

            ResultSetMetaData rsMd = r.getMetaData();

            int cantidadColumnas = rsMd.getColumnCount();

            for (int i = 1; i <= cantidadColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            while (r.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = r.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            r.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Conexión Fallida" + ex.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PedidosAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PedidosAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PedidosAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PedidosAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PedidosAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lbusu;
    private javax.swing.JButton button_actualizar;
    private javax.swing.JButton button_agregar;
    private javax.swing.JButton button_buscar;
    private javax.swing.JButton button_eliminar;
    private javax.swing.JButton button_eliminar1;
    private javax.swing.JButton button_registrar;
    private javax.swing.JButton button_regresar;
    private javax.swing.JButton button_verTodo;
    private javax.swing.JComboBox<String> cmbanio;
    private javax.swing.JComboBox<String> cmbdia;
    private javax.swing.JComboBox<String> cmbmes;
    private javax.swing.JComboBox<String> comboEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_usuarios;
    private javax.swing.JLabel toc;
    private javax.swing.JLabel tov;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_idp;
    private javax.swing.JTextField txt_no;
    private javax.swing.JTextField txt_preCompra;
    private javax.swing.JTextField txt_preVenta;
    private javax.swing.JTextField txt_produc;
    private javax.swing.JTextField txt_realizado;
    // End of variables declaration//GEN-END:variables
}
