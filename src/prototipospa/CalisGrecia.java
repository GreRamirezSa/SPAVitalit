/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prototipospa;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lis_h
 */
public class CalisGrecia extends javax.swing.JFrame {

    OpcionesVenta pOV;

    /**
     * Creates new form usuariosAdmin
     */
    public CalisGrecia() {
        initComponents();
        actualizarC();
        setLocationRelativeTo(null);
    }

    public void Error() {
        JOptionPane.showMessageDialog(null, "Error en la operacion");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public void nombre(String u) {
        Lbusu.setText(u);
        Lbusu.setVisible(false);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txtcre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_usuarios = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        button_registrar = new javax.swing.JButton();
        button_actualizar = new javax.swing.JButton();
        button_buscar = new javax.swing.JButton();
        button_buscar1 = new javax.swing.JButton();
        button_verTodo = new javax.swing.JButton();
        button_verTodo1 = new javax.swing.JButton();
        button_regresar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtcan = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Lbusu1 = new javax.swing.JLabel();
        Lbusu = new javax.swing.JLabel();
        lbltable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(0, 0, 0));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        txtcre.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txtcre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcreKeyTyped(evt);
            }
        });

        table_usuarios.setBackground(new java.awt.Color(255, 102, 0));
        table_usuarios.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        table_usuarios.setForeground(new java.awt.Color(255, 255, 255));
        table_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Usuario", "Contrase√±a", "Asistente", "Tipo usuario"
            }
        ));
        table_usuarios.setEnabled(false);
        table_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_usuariosMouseClicked(evt);
            }
        });
        table_usuarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_usuariosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table_usuarios);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones para abono", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 14))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(153, 0, 153));
        jPanel1.setInheritsPopupMenu(true);
        jPanel1.setName(""); // NOI18N
        jPanel1.setOpaque(false);

        button_registrar.setBackground(new java.awt.Color(255, 136, 18));
        button_registrar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_registrar.setText("Registrar");
        button_registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_registrarMouseClicked(evt);
            }
        });
        button_registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_registrarActionPerformed(evt);
            }
        });
        button_registrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                button_registrarKeyReleased(evt);
            }
        });
        jPanel1.add(button_registrar);

        button_actualizar.setBackground(new java.awt.Color(255, 136, 18));
        button_actualizar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_actualizar.setText("Actualizar");
        button_actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_actualizarMouseClicked(evt);
            }
        });
        jPanel1.add(button_actualizar);

        button_buscar.setBackground(new java.awt.Color(255, 136, 18));
        button_buscar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_buscar.setText("Buscar Credito");
        button_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_buscarMouseClicked(evt);
            }
        });
        jPanel1.add(button_buscar);

        button_buscar1.setBackground(new java.awt.Color(255, 136, 18));
        button_buscar1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_buscar1.setText("Buscar Abonos");
        button_buscar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_buscar1MouseClicked(evt);
            }
        });
        jPanel1.add(button_buscar1);

        button_verTodo.setBackground(new java.awt.Color(255, 136, 18));
        button_verTodo.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_verTodo.setText("Ver Abonos");
        button_verTodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_verTodoMouseClicked(evt);
            }
        });
        jPanel1.add(button_verTodo);

        button_verTodo1.setBackground(new java.awt.Color(255, 136, 18));
        button_verTodo1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_verTodo1.setText("Ver Creditos");
        button_verTodo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_verTodo1MouseClicked(evt);
            }
        });
        jPanel1.add(button_verTodo1);

        button_regresar.setBackground(new java.awt.Color(255, 136, 18));
        button_regresar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_regresar.setText("Regresar");
        button_regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_regresarMouseClicked(evt);
            }
        });
        button_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_regresarActionPerformed(evt);
            }
        });
        jPanel1.add(button_regresar);

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setText("ID Credito");

        txtcan.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txtcan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtcanMouseClicked(evt);
            }
        });
        txtcan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcanKeyTyped(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/logoBueno.jpg"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setText("Cantidad");

        Lbusu1.setFont(new java.awt.Font("Trebuchet MS", 0, 36)); // NOI18N
        Lbusu1.setText("Abonos");

        Lbusu.setText("jLabel2");

        lbltable.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        lbltable.setText("Creditos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 783, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 285, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(50, 50, 50))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(Lbusu))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtcan, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lbusu1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcre, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbltable)
                .addGap(446, 446, 446))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(Lbusu)
                                .addGap(0, 71, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Lbusu1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtcre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtcan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(79, 79, 79))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addComponent(lbltable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void table_usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_usuariosMouseClicked

    }//GEN-LAST:event_table_usuariosMouseClicked

    private void table_usuariosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_usuariosKeyReleased

    }//GEN-LAST:event_table_usuariosKeyReleased

    private void button_registrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_registrarMouseClicked
        String cantidad = txtcan.getText();
        String idcredito = txtcre.getText();
        SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal = GregorianCalendar.getInstance();
        String fecha = date.format(cal.getTime());
        String cad = "";
        if (!cantidad.equals("")&&!idcredito.equals("")) {
            int response = JOptionPane.showConfirmDialog(this, "ID Credito= " + idcredito + "\nCantidad= " + cantidad + "\n¬øSon los datos correctos?", "ATENCI√ìN",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            switch (response) {
                case JOptionPane.NO_OPTION:
                    break;
                case JOptionPane.YES_OPTION:
                    Connection miCon,
                     miCon2;
                    miCon = (new ConexionBD()).conectar();
                    miCon2 = (new ConexionBD()).conectar();
                    System.out.println(miCon);
                   // if (!cantidad.equals("")&&!idcredito.equals("")) {
                        if (miCon != null) {
                            try {
                                //System.out.println("Entro");
                                String sql = "INSERT INTO ABONOS (ID_CREDITO,FECHA,CANTIDAD) VALUES(" + txtcre.getText() + ",'" + fecha + "'," + txtcan.getText() + "); ";
                                Statement stmt = miCon.createStatement();
                                stmt.executeUpdate(sql);
                            } catch (HeadlessException | SQLException e) {
                                JOptionPane.showMessageDialog(this, "Verifique la informaci√≥n a insertar ", "Error",
                                        JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        System.out.println("Conexion 2");
                        if (miCon2 != null) {
                            try {
                                boolean status = false;
                                String sql1 = "select resto from credito where id_credito = " + txtcre.getText() + "";
                                //System.out.println(sql1);
                                Statement stmt1 = miCon.createStatement();
                                ResultSet r = stmt1.executeQuery(sql1);
                                if (r.next()) {
                                    cad = r.getString("resto") + "";
                                    System.out.println(cad);
                                }
                                System.out.println("update");
                                float din = Float.parseFloat(cad) - Float.parseFloat(cantidad);
                                if (din == 0) {
                                    status = true;
                                String sql3 = "UPDATE CREDITO SET fecha_fin='" + fecha + "' WHERE ID_CREDITO=" + idcredito;
                                Statement stmt3 = miCon.createStatement();
                                stmt3.executeUpdate(sql3);
                                //stmt3.close();
                                }
                                String sql2 = "UPDATE CREDITO SET RESTO=" + din + ", ESTATUS=" + status + " WHERE ID_CREDITO=" + idcredito;
                                Statement stmt = miCon.createStatement();
                                stmt.executeUpdate(sql2);
                                stmt.close();
                            } catch (HeadlessException | SQLException e) {
                                JOptionPane.showMessageDialog(this, "Verifique la informaci√≥n a insertar"+ e, "Error",
                                        JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        txtcre.setText("");
                        txtcan.setText("");
                        actualizarC();
                     
                    break;
                case JOptionPane.CLOSED_OPTION:
                    break;
                default:
                    break;
            }
            int response2 = JOptionPane.showConfirmDialog(this, "El pago es con efectivo?", "ATENCI√ìN", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            switch (response2) {
                case JOptionPane.NO_OPTION:
                    break;
                case JOptionPane.YES_OPTION:
                    Connection miCon1;
                    miCon1 = (new ConexionBD()).conectar();
                    if (miCon1 != null) {
                        try {
                            String antes = "select dinero as \"despues\" from caja where id_caja=(SELECT MAX(id_caja) FROM caja)";
                            Statement stmt2 = miCon1.createStatement();
                            ResultSet r2 = stmt2.executeQuery(antes);
                            r2.next();
                            String nv1 = r2.getString("despues");
                            stmt2.close();

                            float guardar = Float.parseFloat(nv1) + Float.parseFloat(cantidad);
                            System.out.println(guardar);
                            // din.setText("" + guardar);
                            System.out.println("antes update");
                            String sql2 = "UPDATE caja SET dinero= " + guardar + " where id_caja=1";
                            Statement stmt3 = miCon1.createStatement();
                            stmt3.executeUpdate(sql2);
                            stmt3.close();

                            JOptionPane.showMessageDialog(this, "Dinero registrado en caja ");
                        } catch (NumberFormatException | SQLException e) {
                            JOptionPane.showMessageDialog(this, " " + e.getMessage());
                        }
                    }
                    break;
                case JOptionPane.CLOSED_OPTION:
                    break;
            }
        }else{
        JOptionPane.showMessageDialog(this, "Error, no dejar campos vac√≠os");}
    }//GEN-LAST:event_button_registrarMouseClicked

    private void button_registrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_registrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button_registrarActionPerformed

    private void button_registrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_registrarKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_button_registrarKeyReleased

    private void button_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_buscarMouseClicked
        String id1=txtcre.getText();
        if(!id1.equals("")){
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            this.table_usuarios.setModel(modelo);
            String g;
            Connection miCon;
            miCon = (new ConexionBD()).conectar();

            String sql = "select id_credito as \"ID Credito\",id_cliente as \"ID Cliente\", id_venta as \"Venta\", fecha_inicio as \"Fecha Inicio\", fecha_fin as \"Fecha Fin\",estatus as \"Estado\", resto as \"Resto\" from credito where id_credito="+id1+";";
            Statement stmt = miCon.createStatement();
            ResultSet r = stmt.executeQuery(sql);

            ResultSetMetaData rsMd = r.getMetaData();

            int cantidadColumnas = rsMd.getColumnCount();

            for (int i = 1; i <= cantidadColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            while (r.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = r.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            r.close();
            txtcre.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error ");
        }
        cambio2();}
        else{
        JOptionPane.showMessageDialog(this,"Error, ingrese el ID de cr√©dito");
        }
    }//GEN-LAST:event_button_buscarMouseClicked

    private void button_verTodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_verTodoMouseClicked
        lbltable.setText("Abonos");
        actualizarA();
    }//GEN-LAST:event_button_verTodoMouseClicked

    private void button_actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_actualizarMouseClicked
        String cantidad = txtcan.getText();
        String idcredito = txtcre.getText();
        if (!idcredito.equals("")) {
            int response = JOptionPane.showConfirmDialog(this, "¬øEsta seguro que desea actualizar el credito ?" + idcredito, "ATENCI√ìN",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            switch (response) {
                case JOptionPane.NO_OPTION:
                    break;
                case JOptionPane.YES_OPTION:
                    Connection miCon;
                    miCon = (new ConexionBD()).conectar();
                    if (!cantidad.equals("")) {
                        if (miCon != null) {
                            try {
                                String sql = "UPDATE CREDITO SET RESTO=" + cantidad + " WHERE ID_CREDITO=" + idcredito;
                                Statement stmt = miCon.createStatement();
                                stmt.executeUpdate(sql);
                                stmt.close();
                                JOptionPane.showMessageDialog(this, "Actualizado con √©xito ");
                            } catch (SQLException e) {
                                JOptionPane.showMessageDialog(this, "No se pudo actualizar", "Error",
                                        JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        txtcan.setText("");
                        txtcre.setText("");
                    } else {
                        JOptionPane.showMessageDialog(this, "Error, ingrese el nuevo resto");
                    }
                    actualizarC();
                    break;
                case JOptionPane.CLOSED_OPTION:
                    break;
                default:
                    break;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Error, actualizar por ID");
        }
    }//GEN-LAST:event_button_actualizarMouseClicked
    private void button_regresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_regresarMouseClicked
        pOV = new OpcionesVenta();
        pOV.setVisible(true);
        this.setVisible(false);
        pOV.nombre(Lbusu.getText());
    }//GEN-LAST:event_button_regresarMouseClicked

    private void button_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_regresarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button_regresarActionPerformed

    private void button_verTodo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_verTodo1MouseClicked
        lbltable.setText("Creditos");
        actualizarC();
    }//GEN-LAST:event_button_verTodo1MouseClicked

    private void button_buscar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_buscar1MouseClicked
    String id=txtcre.getText();
    System.out.println(id);
    if(!id.equals("")){
    try {
            DefaultTableModel modelo = new DefaultTableModel();
            this.table_usuarios.setModel(modelo);
            String g;
            Connection miCon;
            miCon = (new ConexionBD()).conectar();

            String sql = "SELECT FECHA AS \"Fecha\", cantidad as \"Cantidad\" FROM ABONOS where id_credito="+id;
            System.out.println(sql);
            Statement stmt = miCon.createStatement();
            ResultSet r = stmt.executeQuery(sql);

            ResultSetMetaData rsMd = r.getMetaData();

            int cantidadColumnas = rsMd.getColumnCount();

            for (int i = 1; i <= cantidadColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            while (r.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = r.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            r.close();
            txtcre.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"Error");
        }
    }else{
    JOptionPane.showMessageDialog(this, "Error, ingrese el ID del cr√©dito");
    }
    }//GEN-LAST:event_button_buscar1MouseClicked

    private void txtcreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcreKeyTyped
          int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese s√≥lo n√∫meros", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtcreKeyTyped

    private void txtcanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtcanMouseClicked
         
    }//GEN-LAST:event_txtcanMouseClicked

    private void txtcanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcanKeyTyped
         int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese s√≥lo n√∫meros", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtcanKeyTyped

    public void actualizarA() {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            this.table_usuarios.setModel(modelo);

            Connection miCon;
            miCon = (new ConexionBD()).conectar();

            String sql = "select id_abono as \"ID Abono\", id_credito as \"ID Credito\", fecha as \"Fecha\", cantidad as \"Dinero\" from abonos;";
            Statement stmt = miCon.createStatement();
            ResultSet r = stmt.executeQuery(sql);

            ResultSetMetaData rsMd = r.getMetaData();

            int cantidadColumnas = rsMd.getColumnCount();

            for (int i = 1; i <= cantidadColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            while (r.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = r.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            r.close();
        } catch (SQLException ex) {
        }
    }

    public void cambio2() {
        for (int i = 0; i < table_usuarios.getRowCount(); i++) {
            if ((boolean) table_usuarios.getValueAt(i, 5) == false) {
                table_usuarios.setValueAt("En deuda", i, 5);

            } else {
                table_usuarios.setValueAt("Pagado", i, 5);
            }
        }
    }

    public void actualizarC() {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            this.table_usuarios.setModel(modelo);
            String g;
            Connection miCon;
            miCon = (new ConexionBD()).conectar();

            String sql = "select id_credito as \"ID Credito\",id_cliente as \"ID Cliente\", id_venta as \"Venta\", fecha_inicio as \"Fecha Inicio\", fecha_fin as \"Fecha Fin\",estatus as \"Estado\", resto as \"Resto\", nombre as \"Nombre\" from credito where estatus=false;";
            Statement stmt = miCon.createStatement();
            ResultSet r = stmt.executeQuery(sql);

            ResultSetMetaData rsMd = r.getMetaData();

            int cantidadColumnas = rsMd.getColumnCount();

            for (int i = 1; i <= cantidadColumnas; i++) {
                modelo.addColumn(rsMd.getColumnLabel(i));
            }

            while (r.next()) {
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i] = r.getObject(i + 1);
                }
                modelo.addRow(fila);
            }
            r.close();
        } catch (SQLException ex) {
        }
        cambio2();
    }

    public void Confirmar() {
        int response = JOptionPane.showConfirmDialog(this, "", "ATENCI√ìN",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        switch (response) {
            case JOptionPane.NO_OPTION:
                break;
            case JOptionPane.YES_OPTION:
                break;
            case JOptionPane.CLOSED_OPTION:
                break;
            default:
                break;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalisGrecia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalisGrecia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalisGrecia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalisGrecia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalisGrecia().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lbusu;
    private javax.swing.JLabel Lbusu1;
    private javax.swing.JButton button_actualizar;
    private javax.swing.JButton button_buscar;
    private javax.swing.JButton button_buscar1;
    private javax.swing.JButton button_registrar;
    private javax.swing.JButton button_regresar;
    private javax.swing.JButton button_verTodo;
    private javax.swing.JButton button_verTodo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbltable;
    private javax.swing.JTable table_usuarios;
    private javax.swing.JTextField txtcan;
    private javax.swing.JTextField txtcre;
    // End of variables declaration//GEN-END:variables
}
