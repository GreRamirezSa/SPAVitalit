/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prototipospa;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.TableColumn;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author lis_h
 */
public class VentasAdminPedidos extends javax.swing.JFrame {

    principalAdmin pAdmin;
    OpcionesVenta oV;
    VentasAdminConVen ir;
    int contador = 0;
    int c1 = 0, c2 = 0, c3 = 0;
    private int l, n, m;
    //Ticket2 t = new Ticket2("\n \n\n \n\n \n\n \n\n \n\n \n\n \n");

    /**
     * Creates new form PedidosAdmin
     */
    public VentasAdminPedidos() {
        try {
            initComponents();
            setLocationRelativeTo(null);
            llenarCB();
            llenarCBPed();
            NumVenta();
          //  Certificado("1000");
            System.out.println(Certificado("1000"));
        } catch (SQLException ex) {
            Logger.getLogger(VentasAdminPedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    public void nombre(String u) {
        Lbusu.setText(u);
        Lbusu.setVisible(false);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_pedidos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        button_actualizar = new javax.swing.JButton();
        button_buscar = new javax.swing.JButton();
        button_verTodo = new javax.swing.JButton();
        button_regresar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        text_des = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tel = new javax.swing.JTextField();
        combo = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbltot = new javax.swing.JLabel();
        num_venta = new javax.swing.JLabel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        AgregarPed = new javax.swing.JButton();
        combiped = new javax.swing.JComboBox<>();
        AgregarPed1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtid_pro = new javax.swing.JTextField();
        AgregarProd = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtcant_pro = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_precio = new javax.swing.JTextField();
        AgregarPed2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        num_ses = new javax.swing.JTextField();
        AgregarServ = new javax.swing.JButton();
        combi = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        txt_prec = new javax.swing.JTextField();
        AgregarPed3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_serv = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_productos = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Lbusu = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        table_pedidos.setBackground(new java.awt.Color(255, 102, 0));
        table_pedidos.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        table_pedidos.setForeground(new java.awt.Color(255, 255, 255));
        table_pedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Pedido", "Total"
            }
        ));
        table_pedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_pedidosMouseClicked(evt);
            }
        });
        table_pedidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_pedidosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table_pedidos);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones para venta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Trebuchet MS", 1, 14))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(153, 0, 153));
        jPanel1.setInheritsPopupMenu(true);
        jPanel1.setName(""); // NOI18N
        jPanel1.setOpaque(false);

        button_actualizar.setBackground(new java.awt.Color(255, 136, 18));
        button_actualizar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_actualizar.setText("Efectuar");
        button_actualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_actualizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                button_actualizarMouseEntered(evt);
            }
        });
        jPanel1.add(button_actualizar);

        button_buscar.setBackground(new java.awt.Color(255, 136, 18));
        button_buscar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_buscar.setText("Cancelar");
        button_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_buscarMouseClicked(evt);
            }
        });
        jPanel1.add(button_buscar);

        button_verTodo.setBackground(new java.awt.Color(255, 136, 18));
        button_verTodo.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_verTodo.setText("Consultar ventas");
        button_verTodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_verTodoMouseClicked(evt);
            }
        });
        jPanel1.add(button_verTodo);

        button_regresar.setBackground(new java.awt.Color(255, 136, 18));
        button_regresar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        button_regresar.setText("Regresar");
        button_regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_regresarMouseClicked(evt);
            }
        });
        button_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_regresarActionPerformed(evt);
            }
        });
        jPanel1.add(button_regresar);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 36)); // NOI18N
        jLabel5.setText("Venta ");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/logoBueno.jpg"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setText("Numero de Venta");

        text_des.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        text_des.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        text_des.setText("0");
        text_des.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                text_desKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setText("Descuento");

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel13.setText("No. teléfono");

        tel.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        tel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                telKeyTyped(evt);
            }
        });

        combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Crédito", "Tarjeta de Credito", "Cheque" }));
        combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboItemStateChanged(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel14.setText("Tipo de pago");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("%");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("Total:");

        lbltot.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbltot.setForeground(new java.awt.Color(255, 0, 0));
        lbltot.setText("0.00");

        num_venta.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        num_venta.setText("no");

        jTabbedPane4.setBackground(new java.awt.Color(255, 136, 18));

        jPanel3.setBackground(new java.awt.Color(255, 136, 18));

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel4.setText("ID del pedido a vender:");

        AgregarPed.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        AgregarPed.setText("Agregar a venta");
        AgregarPed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AgregarPedMouseClicked(evt);
            }
        });

        AgregarPed1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        AgregarPed1.setText("Eliminar");
        AgregarPed1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AgregarPed1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combiped, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AgregarPed1)
                    .addComponent(AgregarPed))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(combiped, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(AgregarPed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AgregarPed1)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Pedidos", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 136, 18));

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel6.setText("ID Producto");

        txtid_pro.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txtid_pro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtid_proKeyTyped(evt);
            }
        });

        AgregarProd.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        AgregarProd.setText("Agregar a venta");
        AgregarProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AgregarProdMouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel10.setText("Cantidad");

        txtcant_pro.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txtcant_pro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcant_proKeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel18.setText("Precio");

        txt_precio.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_precioKeyTyped(evt);
            }
        });

        AgregarPed2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        AgregarPed2.setText("Eliminar");
        AgregarPed2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AgregarPed2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtid_pro, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtcant_pro, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(AgregarProd))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(AgregarPed2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtid_pro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtcant_pro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AgregarProd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AgregarPed2)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Productos", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 136, 18));

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel11.setText("Nombre");

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel12.setText("No. sesiones");

        num_ses.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        num_ses.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                num_sesKeyTyped(evt);
            }
        });

        AgregarServ.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        AgregarServ.setText("Agregar a venta");
        AgregarServ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AgregarServMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AgregarServMouseEntered(evt);
            }
        });

        combi.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        combi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Poner servs" }));

        jLabel19.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel19.setText("Precio");

        txt_prec.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        txt_prec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_precKeyTyped(evt);
            }
        });

        AgregarPed3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        AgregarPed3.setText("Eliminar");
        AgregarPed3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AgregarPed3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AgregarServ)
                        .addGap(18, 18, 18)
                        .addComponent(AgregarPed3))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(18, 18, 18))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addGap(47, 47, 47)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(57, 57, 57)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_prec)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(num_ses)
                                .addComponent(combi, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(combi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(num_ses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txt_prec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarServ)
                    .addComponent(AgregarPed3))
                .addGap(27, 27, 27))
        );

        jTabbedPane4.addTab("Servicios", jPanel5);

        table_serv.setBackground(new java.awt.Color(255, 102, 0));
        table_serv.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        table_serv.setForeground(new java.awt.Color(255, 255, 255));
        table_serv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Servicio", "Servicio", "Costo", "Sesiones"
            }
        ));
        table_serv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_servMouseClicked(evt);
            }
        });
        table_serv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_servKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(table_serv);

        table_productos.setBackground(new java.awt.Color(255, 102, 0));
        table_productos.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        table_productos.setForeground(new java.awt.Color(255, 255, 255));
        table_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Producto", "Nombre", "Cantidad", "Precio"
            }
        ));
        table_productos.setToolTipText("");
        table_productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_productosMouseClicked(evt);
            }
        });
        table_productos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_productosKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(table_productos);

        jLabel15.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel15.setText("Pedidos");

        jLabel16.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel16.setText("Productos");

        jLabel17.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jLabel17.setText("Servicios");

        Lbusu.setText("jLabel2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(lbltot, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel14))
                                .addGap(66, 66, 66)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(text_des, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(num_venta)
                                    .addComponent(tel, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(232, 232, 232)
                                .addComponent(jLabel15))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Lbusu)
                                .addGap(454, 454, 454)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(33, 33, 33)
                                        .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(52, 52, 52))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(285, 285, 285)))
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel17)
                                .addGap(200, 200, 200)))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(12, 12, 12)
                                .addComponent(Lbusu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(num_venta))
                                .addGap(16, 16, 16)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(text_des, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbltot, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel15)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane4.getAccessibleContext().setAccessibleName("jjj");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void table_pedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_pedidosMouseClicked

    }//GEN-LAST:event_table_pedidosMouseClicked

    private void table_pedidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_pedidosKeyReleased

    }//GEN-LAST:event_table_pedidosKeyReleased

    private void button_actualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_actualizarMouseClicked
        Connection miCon, miCon2, miCon4;
        float total = Float.parseFloat(lbltot.getText());
        float descuento, cambio = 0,certidi=0;

        String tic = "", efectivo = "";
        SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat hora = new SimpleDateFormat("hh:mm a");
        Calendar cal = GregorianCalendar.getInstance();
        String fecha = date.format(cal.getTime());
        String horaTicket = hora.format(cal.getTime());
        String pago = "" + combo.getSelectedItem();
        System.out.println(lbltot.getText());
        descuento = Float.parseFloat(text_des.getText()) * (Float.parseFloat(lbltot.getText()) / 100);
        total = total - descuento;
        miCon = (new ConexionBD()).conectar();
        miCon2 = (new ConexionBD()).conectar();
        miCon4 = (new ConexionBD()).conectar();
        String no = tel.getText();
        try {
            if (!no.equals("")){
                 
                    if (table_pedidos.getRowCount() > 0 || table_productos.getRowCount() > 0 || table_serv.getRowCount() > 0) {
                        //certificado
                        int response = JOptionPane.showConfirmDialog(this, "¿Cuenta con certificado de regalo?", "ATENCIÓN",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            switch (response) {
                case JOptionPane.YES_OPTION:
                    certidi=Certificado(JOptionPane.showInputDialog(this, "¿ID del Certificado de regalo"));
                    total=total-certidi;
                    lbltot.setText(""+total);
                    break;
                    case JOptionPane.NO_OPTION:
                    break;
                case JOptionPane.CLOSED_OPTION:
                    break;
                default:
                    break;
            }
            //final certificado
            if(combo.getSelectedIndex()!= 1){//no es credito
            
            efectivo = JOptionPane.showInputDialog(this, "¿Cuanto dinero recibio?");
                if (Float.parseFloat(efectivo) < total) {
                    JOptionPane.showMessageDialog(this, "Dinero insuficiente");
                }
                else{
            
            System.out.println("ENTRO");
                        if (miCon4 != null) {
                            try {
                                miCon4 = (new ConexionBD()).conectar();
                                String sql4 = "select no_tel from clientes where no_tel='" + no + "'";
                                Statement stmt4 = miCon.createStatement();
                                ResultSet r4 = stmt4.executeQuery(sql4);
                                if (r4.next()) {
                                    if (miCon != null) {
                                        try {
                                            Statement stmt = miCon.createStatement();
                                            String sql = "INSERT INTO VENTA (FECHA,USUARIO,TOTAL,TIPO_PAGO,DESCUENTO,ID_CLIENTE) VALUES ('" + fecha + "','"+Lbusu.getText()+"'," + total + ",'" + pago + "'," + text_des.getText() + ",(select id_clientes from clientes where no_tel = '" + tel.getText() + "'))";
                                            System.out.println(total);
                                            System.out.println("Ventas");
                                            stmt.executeUpdate(sql);

                                            for (int i = 0; i < table_pedidos.getRowCount(); i++) {
                                                String sql2 = "INSERT INTO DET_VENTA_PEDI (ID_VENTA,ID_PEDIDO) VALUES (" + num_venta.getText() + "," + table_pedidos.getValueAt(i, 0) + ")";
                                                stmt.executeUpdate(sql2);
                                                String sql3 = "Update pedidos set status = 'Entregado' where id_pedido=" + table_pedidos.getValueAt(i, 0);
                                                stmt.executeUpdate(sql3);
                                            }
                                            for (int i = 0; i < table_productos.getRowCount(); i++) {
                                                String id_venta = num_venta.getText();
                                                String id_producto = "" + table_productos.getValueAt(i, 0);
                                                String nombre = "" + table_productos.getValueAt(i, 1);
                                                String cant = "" + table_productos.getValueAt(i, 2);
                                                String pre = "" + table_productos.getValueAt(i, 3);
                                                System.out.println(" " + id_venta + " " + id_producto + " " + nombre + " " + cant + " " + pre);
                                                String sql2 = "INSERT INTO DET_VENTA_PRODUC (ID_VENTA,ID_PRODUCTO,CANTIDAD,PRECIO_UNITARIO,NOMBRE) VALUES (" + id_venta + "," + id_producto + "," + cant + "," + pre + ",'" + nombre + "')";
                                                stmt.executeUpdate(sql2);
                                                String sql3 = "UPDATE PRODUCTO SET EXISTENCIAS = EXISTENCIAS - 1 WHERE ID_PRODUCTO=" + table_productos.getValueAt(i, 0);
                                                stmt.executeUpdate(sql3);
                                            }
                                            for (int i = 0; i < table_serv.getRowCount(); i++) {
                                                String sql2 = "INSERT INTO DET_VENTA_SERV(ID_VENTA,ID_SERVICIO,CANTIDAD,PRECIO_UNITARIO,NOMBRE,SES_CON) VALUES(" + num_venta.getText() + "," + table_serv.getValueAt(i, 0) + "," + table_serv.getValueAt(i, 3) + "," + table_serv.getValueAt(i, 2) + ",'" + table_serv.getValueAt(i, 1) + "'," + table_serv.getValueAt(i, 3) + ")";
                                                stmt.executeUpdate(sql2);
                                            }
                                            stmt.close();
                                            JOptionPane.showMessageDialog(this, "Venta realizada con Exito");
                                        } catch (SQLException e) {
                                            JOptionPane.showMessageDialog(this, "Conexión Fallida" + e.getMessage());
                                        }
                                    }
                                    if (combo.getSelectedIndex() == 0) {
                                        if (miCon2 != null) {
                                            try {
                                                String cajadin = "select dinero as \"caja\" from caja where id_caja=1";
                                                String nv1;
                                                try (Statement stmt2 = miCon.createStatement()) {
                                                    ResultSet r2 = stmt2.executeQuery(cajadin);
                                                    r2.next();
                                                    nv1 = r2.getString("caja");
                                                }
                                                float guardar = Float.parseFloat(nv1) + total;

                                                String sql2 = "UPDATE caja SET dinero= " + guardar + " where id_caja=1";
                                                try (Statement stmt3 = miCon.createStatement()) {
                                                    stmt3.executeUpdate(sql2);
                                                }
                                            } catch (NumberFormatException | SQLException e) {
                                                JOptionPane.showMessageDialog(this, "update caja " + e.getMessage());
                                            }
                                        }
                                    }
                                    if (combo.getSelectedIndex() == 1) {
                                        if (miCon2 != null) {
                                            try {
                                                Statement stmtc = miCon.createStatement();
                                                String cre = "INSERT INTO CREDITO (ID_CLIENTE,ID_VENTA,FECHA_INICIO,ESTATUS,RESTO,nombre) VALUES((select id_clientes from clientes where no_tel = '" + tel.getText() + "')," + num_venta.getText() + ",'" + fecha + "',false," + total + ",(select nombre from clientes where no_tel = '" + tel.getText() + "'));";
                                                System.out.println(cre);
                                                stmtc.executeUpdate(cre);
                                            } catch (NumberFormatException | SQLException e) {
                                                JOptionPane.showMessageDialog(this,"insert en credito "+ e);
                                            }
                                        }
                                    }
                                    cambio=Float.parseFloat(efectivo)-total;
                                    tic
                                            = "        Vitalit Corpo Spa       \n"
                                            + "    Calle Rio Mississipi #33    \n"
                                            + "   Esquina con Monte Olimpo    \n"
                                            + "       Colonia Lindavista       \n"
                                            + "================================\n"
                                            + "      *** NOTA DE VENTA ***     \n"
                                            + "FECHA: " + fecha + "  " + horaTicket + "\n"
                                            + "NO. DE VENTA: " + num_venta.getText() + "\n"
                                            + "================================\n"
                                            + "--------------------------------\n"
                                            + "           PRODUCTOS           \n"
                                            + "--------------------------------\n"
                                            + "CODIGO   CANT\tP.UNIT\tIMPORTE\n"
                                            + "--------------------------------\n";

                                    int totArt = 0;
                                    for (int i = 0; i < table_productos.getRowCount(); i++) {
                                        String cod = table_productos.getValueAt(i, 0) + "";
                                        String prod = table_productos.getValueAt(i, 1) + "";
                                        int can = Integer.parseInt(table_productos.getValueAt(i, 2) + "");
                                        String pu = table_productos.getValueAt(i, 3) + "";
                                        float tota = can * Float.parseFloat(pu);
                                        tic
                                                += cod + "   " + prod + "\n"
                                                + "         " + can + "\t" + pu + "\t" + tota + "\n";
                                        totArt += can;

                                    }
                                    tic += "--------------------------------\n"
                                            + "           SERVICIOS            \n"
                                            + "--------------------------------\n"
                                            + "CODIGO   SERV\tSESIO\tIMPORTE\n"
                                            + "--------------------------------\n";
                                    int totServ = 0;
                                    for (int i = 0; i < table_serv.getRowCount(); i++) {
                                        String cods = table_serv.getValueAt(i, 0) + "";
                                        String serv = table_serv.getValueAt(i, 1) + "";
                                        int ses = Integer.parseInt(table_serv.getValueAt(i, 3) + "");
                                        String cost = table_serv.getValueAt(i, 2) + "";
                                        float totas = ses * Float.parseFloat(cost);
                                        tic
                                                += cods + "   " + serv + "\n"
                                                + "         " + ses + "\t" + cost + "\t" + totas + "\n";
                                        totServ += ses;

                                    }
                                    tic += "--------------------------------\n"
                                            + "            PEDIDOS             \n"
                                            + "--------------------------------\n"
                                            + "CODIGO DEL PEDIDO \t TOTAL\n"
                                            + "--------------------------------\n";
                                    int totPed = 0;
                                    for (int i = 0; i < table_pedidos.getRowCount(); i++) {
                                        String codp = table_pedidos.getValueAt(i, 0) + "";
                                        String totalp = table_pedidos.getValueAt(i, 1) + "";
                                        tic
                                                += codp + "\t\t\t   " + totalp + "\n";
                                        totPed += table_pedidos.getRowCount();

                                    }
                                    tic += "\n\tA PAGAR:\t" + lbltot.getText() + "\n"
                                            + "\tTOTAL PAGADO:\t" + efectivo + "\n"
                                            + "\tCAMBIO:\t\t" + cambio + "\n"
                                            + "\n"
                                            + "ARTICULOS VENDIDOS: " + totArt + "\n"
                                            + "SERVICIOS VENDIDOS: " + totServ + "\n"
                                            + "ATENDIO: " + Lbusu.getText() + "\n"
                                            + "================================\n"
                                            + "            Telefonos:          \n"
                                            + "    3111198522 y 3111608758     \n"
                                            + "   Facebook @VitalitCorpoSpa   \n"
                                            + " Correo   vitalit.spa@gmail.com \n"
                                            + "  !!! GRACIAS POR SU VISITA !!! \n\n\n"
                                            + "                                "
                                            + "                               \t";
                                    System.out.println(tic);
                                    Ticket2 t = new Ticket2(tic);
                                    tel.setText("");
                                    text_des.setText("0");
                                    lbltot.setText("0");
                                    contador = 0;

                                    DefaultTableModel modelo = (DefaultTableModel) table_pedidos.getModel();
                                    modelo.setRowCount(0);

                                    DefaultTableModel modelo2 = (DefaultTableModel) table_productos.getModel();
                                    modelo2.setRowCount(0);

                                    DefaultTableModel modelo3 = (DefaultTableModel) table_serv.getModel();
                                    modelo3.setRowCount(0);

                                } else {
                                    JOptionPane.showMessageDialog(this, "Error, no existe el número  ");
                                }
                            } catch (SQLException e) {
                                JOptionPane.showMessageDialog(this, "Error try catch gigante  " + e.getMessage());
                            }
                        }
                    }//else del dinero}
            }//if del combo para ver si es credito
            else{//si es credito
                        System.out.println("ENTRO");
                        if (miCon4 != null) {
                            try {
                                miCon4 = (new ConexionBD()).conectar();
                                String sql4 = "select no_tel from clientes where no_tel='" + no + "'";
                                Statement stmt4 = miCon.createStatement();
                                ResultSet r4 = stmt4.executeQuery(sql4);
                                if (r4.next()) {
                                    if (miCon != null) {
                                        try {
                                            Statement stmt = miCon.createStatement();
                                            String sql = "INSERT INTO VENTA (FECHA,USUARIO,TOTAL,TIPO_PAGO,DESCUENTO,ID_CLIENTE) VALUES ('" + fecha + "','"+Lbusu.getText()+"'," + total + ",'" + pago + "'," + text_des.getText() + ",(select id_clientes from clientes where no_tel = '" + tel.getText() + "'))";
                                            System.out.println(total);
                                            System.out.println("Ventas");
                                            stmt.executeUpdate(sql);

                                            for (int i = 0; i < table_pedidos.getRowCount(); i++) {
                                                String sql2 = "INSERT INTO DET_VENTA_PEDI (ID_VENTA,ID_PEDIDO) VALUES (" + num_venta.getText() + "," + table_pedidos.getValueAt(i, 0) + ")";
                                                stmt.executeUpdate(sql2);
                                                String sql3 = "Update pedidos set status = 'Entregado' where id_pedido=" + table_pedidos.getValueAt(i, 0);
                                                stmt.executeUpdate(sql3);
                                            }
                                            for (int i = 0; i < table_productos.getRowCount(); i++) {
                                                String id_venta = num_venta.getText();
                                                String id_producto = "" + table_productos.getValueAt(i, 0);
                                                String nombre = "" + table_productos.getValueAt(i, 1);
                                                String cant = "" + table_productos.getValueAt(i, 2);
                                                String pre = "" + table_productos.getValueAt(i, 3);
                                                System.out.println(" " + id_venta + " " + id_producto + " " + nombre + " " + cant + " " + pre);
                                                String sql2 = "INSERT INTO DET_VENTA_PRODUC (ID_VENTA,ID_PRODUCTO,CANTIDAD,PRECIO_UNITARIO,NOMBRE) VALUES (" + id_venta + "," + id_producto + "," + cant + "," + pre + ",'" + nombre + "')";
                                                stmt.executeUpdate(sql2);
                                                String sql3 = "UPDATE PRODUCTO SET EXISTENCIAS = EXISTENCIAS - 1 WHERE ID_PRODUCTO=" + table_productos.getValueAt(i, 0);
                                                stmt.executeUpdate(sql3);
                                            }
                                            for (int i = 0; i < table_serv.getRowCount(); i++) {
                                                String sql2 = "INSERT INTO DET_VENTA_SERV(ID_VENTA,ID_SERVICIO,CANTIDAD,PRECIO_UNITARIO,NOMBRE,SES_CON) VALUES(" + num_venta.getText() + "," + table_serv.getValueAt(i, 0) + "," + table_serv.getValueAt(i, 3) + "," + table_serv.getValueAt(i, 2) + ",'" + table_serv.getValueAt(i, 1) + "'," + table_serv.getValueAt(i, 3) + ")";
                                                stmt.executeUpdate(sql2);
                                            }
                                            stmt.close();
                                            JOptionPane.showMessageDialog(this, "Venta realizada con Exito");
                                        } catch (SQLException e) {
                                            JOptionPane.showMessageDialog(this, "Conexión Fallida" + e.getMessage());
                                        }
                                    }
                                    if (combo.getSelectedIndex() == 0) {
                                        if (miCon2 != null) {
                                            try {
                                                String cajadin = "select dinero as \"caja\" from caja where id_caja=1";
                                                String nv1;
                                                try (Statement stmt2 = miCon.createStatement()) {
                                                    ResultSet r2 = stmt2.executeQuery(cajadin);
                                                    r2.next();
                                                    nv1 = r2.getString("caja");
                                                }
                                                float guardar = Float.parseFloat(nv1) + total;

                                                String sql2 = "UPDATE caja SET dinero= " + guardar + " where id_caja=1";
                                                try (Statement stmt3 = miCon.createStatement()) {
                                                    stmt3.executeUpdate(sql2);
                                                }
                                            } catch (NumberFormatException | SQLException e) {
                                                JOptionPane.showMessageDialog(this, " " + e.getMessage());
                                            }
                                        }
                                    }
                                    if (combo.getSelectedIndex() == 1) {
                                        if (miCon2 != null) {
                                            try {
                                                Statement stmtc = miCon.createStatement();
                                                String cre = "INSERT INTO CREDITO (ID_CLIENTE,ID_VENTA,FECHA_INICIO,ESTATUS,RESTO,nombre) VALUES((select id_clientes from clientes where no_tel = '" + tel.getText() + "')," + num_venta.getText() + ",'" + fecha + "',false," + total + ",(select nombre from clientes where no_tel = '" + tel.getText() + "'));";
                                                System.out.println(cre);
                                                stmtc.executeUpdate(cre);
                                            } catch (NumberFormatException | SQLException e) {
                                                JOptionPane.showMessageDialog(this, e);
                                            }
                                        }
                                    }
                                    cambio=Float.parseFloat(efectivo)-total;
                                    tic
                                            = "        Vitalit Corpo Spa       \n"
                                            + "    Calle Rio Mississipi #33    \n"
                                            + "   Esquina con Monte Olimpo    \n"
                                            + "       Colonia Lindavista       \n"
                                            + "================================\n"
                                            + "      *** NOTA DE VENTA ***     \n"
                                            + "FECHA: " + fecha + "  " + horaTicket + "\n"
                                            + "NO. DE VENTA: " + num_venta.getText() + "\n"
                                            + "================================\n"
                                            + "--------------------------------\n"
                                            + "           PRODUCTOS           \n"
                                            + "--------------------------------\n"
                                            + "CODIGO   CANT\tP.UNIT\tIMPORTE\n"
                                            + "--------------------------------\n";

                                    int totArt = 0;
                                    for (int i = 0; i < table_productos.getRowCount(); i++) {
                                        String cod = table_productos.getValueAt(i, 0) + "";
                                        String prod = table_productos.getValueAt(i, 1) + "";
                                        int can = Integer.parseInt(table_productos.getValueAt(i, 2) + "");
                                        String pu = table_productos.getValueAt(i, 3) + "";
                                        float tota = can * Float.parseFloat(pu);
                                        tic
                                                += cod + "   " + prod + "\n"
                                                + "         " + can + "\t" + pu + "\t" + tota + "\n";
                                        totArt += can;

                                    }
                                    tic += "--------------------------------\n"
                                            + "           SERVICIOS            \n"
                                            + "--------------------------------\n"
                                            + "CODIGO   SERV\tSESIO\tIMPORTE\n"
                                            + "--------------------------------\n";
                                    int totServ = 0;
                                    for (int i = 0; i < table_serv.getRowCount(); i++) {
                                        String cods = table_serv.getValueAt(i, 0) + "";
                                        String serv = table_serv.getValueAt(i, 1) + "";
                                        int ses = Integer.parseInt(table_serv.getValueAt(i, 3) + "");
                                        String cost = table_serv.getValueAt(i, 2) + "";
                                        float totas = ses * Float.parseFloat(cost);
                                        tic
                                                += cods + "   " + serv + "\n"
                                                + "         " + ses + "\t" + cost + "\t" + totas + "\n";
                                        totServ += ses;

                                    }
                                    tic += "--------------------------------\n"
                                            + "            PEDIDOS             \n"
                                            + "--------------------------------\n"
                                            + "CODIGO DEL PEDIDO \t TOTAL\n"
                                            + "--------------------------------\n";
                                    int totPed = 0;
                                    for (int i = 0; i < table_pedidos.getRowCount(); i++) {
                                        String codp = table_pedidos.getValueAt(i, 0) + "";
                                        String totalp = table_pedidos.getValueAt(i, 1) + "";
                                        tic
                                                += codp + "\t\t\t   " + totalp + "\n";
                                        totPed += table_pedidos.getRowCount();

                                    }
                                    tic += "\n\tA PAGAR:\t" + lbltot.getText() + "\n"
                                            + "\tTOTAL PAGADO:\t" + efectivo + "\n"
                                            + "\tCAMBIO:\t\t" + cambio + "\n"
                                            + "\n"
                                            + "ARTICULOS VENDIDOS: " + totArt + "\n"
                                            + "SERVICIOS VENDIDOS: " + totServ + "\n"
                                            + "ATENDIO: " + Lbusu.getText() + "\n"
                                            + "================================\n"
                                            + "            Telefonos:          \n"
                                            + "    3111198522 y 3111608758     \n"
                                            + "   Facebook @VitalitCorpoSpa   \n"
                                            + " Correo   vitalit.spa@gmail.com \n"
                                            + "  !!! GRACIAS POR SU VISITA !!! \n\n\n"
                                            + "                                "
                                            + "                               \t";
                                    System.out.println(tic);
                                    Ticket2 t = new Ticket2(tic);
                                    tel.setText("");
                                    text_des.setText("0");
                                    lbltot.setText("0");
                                    contador = 0;

                                    DefaultTableModel modelo = (DefaultTableModel) table_pedidos.getModel();
                                    modelo.setRowCount(0);

                                    DefaultTableModel modelo2 = (DefaultTableModel) table_productos.getModel();
                                    modelo2.setRowCount(0);

                                    DefaultTableModel modelo3 = (DefaultTableModel) table_serv.getModel();
                                    modelo3.setRowCount(0);

                                } else {
                                    JOptionPane.showMessageDialog(this, "Error, no existe el número  ");
                                }
                            } catch (SQLException e) {
                                JOptionPane.showMessageDialog(this, "Error  " + e.getMessage());
                            }
                        }
            
            }
                
                
                    } else {
                        JOptionPane.showMessageDialog(this, "Agregar pedidos, servicios o productos para la venta", "Error",
                                JOptionPane.ERROR_MESSAGE);
                    }
                
            }//fin del if que valida el numero vacio
            else {
                JOptionPane.showMessageDialog(this, "Error, no dejar campos vacíos");
            }
            //  tot.setText("");
          //  Ticket2 t = new Ticket2(tic);
                        llenarCB();
            llenarCBPed();
            NumVenta();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error no se registro venta");
        }
    }//GEN-LAST:event_button_actualizarMouseClicked
    public Integer Certificado(String id) {
        Connection miCon;
        String certi;
        miCon = (new ConexionBD()).conectar();
        if (miCon != null) {
            try {
                Statement stmtce = miCon.createStatement();
                String cer = "SELECT VALOR FROM CERTIFICADOS WHERE ID_CERTIFICADO=" + id;
                ResultSet r2 = stmtce.executeQuery(cer);
                if(r2.next()){
                certi = r2.getString("VALOR");
                return Integer.parseInt(certi);}
                else{
                    return 0;}
            } catch (NumberFormatException | SQLException e) {
                JOptionPane.showMessageDialog(this, "fff "+e);
            }
        }
        return 0;
    }
    private void button_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_buscarMouseClicked
                                    tel.setText("");
                                    text_des.setText("0");
                                    lbltot.setText("0");
                                    contador = 0;

                                    DefaultTableModel modelo = (DefaultTableModel) table_pedidos.getModel();
                                    modelo.setRowCount(0);

                                    DefaultTableModel modelo2 = (DefaultTableModel) table_productos.getModel();
                                    modelo2.setRowCount(0);

                                    DefaultTableModel modelo3 = (DefaultTableModel) table_serv.getModel();
                                    modelo3.setRowCount(0);
    }//GEN-LAST:event_button_buscarMouseClicked

    private void button_verTodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_verTodoMouseClicked
        ir = new VentasAdminConVen();
        ir.setVisible(true);
        this.setVisible(false);
        ir.nombre(Lbusu.getText());
    }//GEN-LAST:event_button_verTodoMouseClicked

    private void button_regresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_regresarMouseClicked
        oV = new OpcionesVenta();
        oV.setVisible(true);
        this.setVisible(false);
        oV.nombre(Lbusu.getText());
    }//GEN-LAST:event_button_regresarMouseClicked

    private void button_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_regresarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_button_regresarActionPerformed

    private void comboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboItemStateChanged

        // TODO add your handling code here:
    }//GEN-LAST:event_comboItemStateChanged
    public boolean Recorre(String r) {
        for (int i = 0; i < table_pedidos.getRowCount(); i++) {
            if (r.equals("" + table_pedidos.getValueAt(i, 0))) {
                return true;
            }
        }
        return false;
    }
    private void AgregarPedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgregarPedMouseClicked
        String id = "" + combiped.getSelectedItem();
        System.out.println(id);
        Connection miCon = (new ConexionBD()).conectar();
        if (!num_venta.equals("")) {
            if (miCon != null) {
                if (c1 == 0) {
                    DefaultTableModel modelo = (DefaultTableModel) table_pedidos.getModel();
                    try {
                        String sql = "select * from pedidos where id_pedido = " + id;
                        Statement stmt = miCon.createStatement();
                        ResultSet r = stmt.executeQuery(sql);
                        if (r.next()) {
                            int total = r.getInt("total_v");
                            int idp = r.getInt("id_pedido");
                            Object reg[] = {
                                idp,
                                total
                            };
                            modelo.addRow(reg);
                            c1++;
                            System.out.println(c1);
                        } else {
                            JOptionPane.showMessageDialog(this, "Codigo incorrecto");
                        }

                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(this, "Conexión Fallida" + e.getMessage());
                    }
                } else {
                    System.out.println("" + Recorre(id));
                    if (!Recorre(id)) {
                        DefaultTableModel modelo = (DefaultTableModel) table_pedidos.getModel();
                        try {
                            String sql = "select * from pedidos where id_pedido = " + id;
                            Statement stmt = miCon.createStatement();
                            ResultSet r = stmt.executeQuery(sql);
                            if (r.next()) {
                                int total = r.getInt("total_v");
                                int idp = r.getInt("id_pedido");
                                Object reg[] = {
                                    idp,
                                    total
                                };
                                modelo.addRow(reg);
                            } else {
                                JOptionPane.showMessageDialog(this, "Codigo incorrecto");
                            }
                            System.out.println("hola");
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(this, "Conexión Fallida" + e.getMessage());
                        }

                    }
                }//terina el else
            }//termina mi con
        } else {
            JOptionPane.showMessageDialog(this, "Error");
        }
        suma();
        //Limpiar2();
        combiped.requestFocus();
    }//GEN-LAST:event_AgregarPedMouseClicked

    private void table_servMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_servMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_table_servMouseClicked

    private void table_servKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_servKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_table_servKeyReleased

    private void table_productosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_productosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_table_productosMouseClicked

    private void table_productosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_productosKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_table_productosKeyReleased
    public boolean Recorre2(String r) {
        for (int i = 0; i < table_productos.getRowCount(); i++) {
            if (r.equals("" + table_productos.getValueAt(i, 0))) {
                return true;
            }
        }
        return false;
    }
    private void AgregarProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgregarProdMouseClicked
        String id = txtid_pro.getText();
        int idp=Integer.parseInt(txtid_pro.getText());
        String c = txtcant_pro.getText();
        String p = txt_precio.getText();
        Connection miCon = (new ConexionBD()).conectar();
        if (!num_venta.equals("")) {
            if (!id.equals("") && !c.equals("") && !p.equals("")) {
                if (miCon != null) {
                    if (c2 == 0) {
                        DefaultTableModel modelo = (DefaultTableModel) table_productos.getModel();
                        try {
                            String sql = "select * from producto where id_producto =" + idp;
                            Statement stmt = miCon.createStatement();
                            ResultSet r = stmt.executeQuery(sql);
                            if (r.next()) {
                                int can = Integer.parseInt(txtcant_pro.getText());
                                String nom = r.getString("nombre");
                                int max = r.getInt("existencias");
                                float pr = Float.parseFloat(txt_precio.getText());
                                // System.out.println("Cantidad " + can + " maximo " + max + "Existencias " + ex + "Precio " + pr);
                                if (can > 0 && can <= max) {
                                    Object reg[] = {
                                        Integer.parseInt(txtid_pro.getText()),
                                        nom,
                                        can,
                                        pr
                                    };
                                    modelo.addRow(reg);
                                    c2++;
                                } else {
                                    JOptionPane.showMessageDialog(this, "La existencia es:" + max);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Codigo incorrecto");
                            }
                            txtid_pro.setText("");
                            txtcant_pro.setText("");
                            txt_precio.setText("");
                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(this, "Conexión Fallida" + e.getMessage());
                        }
                    } else {
                        if (!Recorre2(id)) {
                            DefaultTableModel modelo = (DefaultTableModel) table_productos.getModel();
                            try {
                                String sql = "select * from producto where id_producto =" + Integer.parseInt(txtid_pro.getText());
                                Statement stmt = miCon.createStatement();
                                ResultSet r = stmt.executeQuery(sql);
                                if (r.next()) {
                                    int can = Integer.parseInt(txtcant_pro.getText());
                                    String nom = r.getString("nombre");
                                    int max = r.getInt("existencias");
                                    float ex = r.getFloat("existencias");
                                    float pr = Float.parseFloat(txt_precio.getText());
                                    System.out.println("Cantidad " + can + " maximo " + max + "Existencias " + ex + "Precio " + pr);
                                    if (can > 0 && can <= max) {
                                        Object reg[] = {
                                            id,
                                            nom,
                                            can,
                                            pr
                                        };
                                        modelo.addRow(reg);
                                    } else {
                                        JOptionPane.showMessageDialog(this, "La existencia es:" + max);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Codigo incorrecto");
                                }
                                txtid_pro.setText("");
                                txtcant_pro.setText("");
                                txt_precio.setText("");
                            } catch (SQLException e) {
                                JOptionPane.showMessageDialog(this, "Conexión Fallida" + e.getMessage());
                            }
                        }
                    }
                }//fin de mi con
            } else {
                JOptionPane.showMessageDialog(this, "Error, no deje campos vacíos");
            }
        }//if de id de venta
        else {
            JOptionPane.showMessageDialog(this, "Error");
        }
        suma();
        txtcant_pro.requestFocus();
    }//GEN-LAST:event_AgregarProdMouseClicked
    public boolean Recorre3(String r) {
        for (int i = 0; i < table_serv.getRowCount(); i++) {
            if (r.equals(table_serv.getValueAt(i, 1))) {
                return true;
            }
        }
        return false;
    }
    private void AgregarServMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgregarServMouseClicked
        String serv = "" + combi.getSelectedItem();
        String numS = num_ses.getText();
        String p = txt_prec.getText();
        Connection miCon = (new ConexionBD()).conectar();
        if (!num_venta.equals("")) {
            if (!numS.equals("") && !p.equals("")) {
                if (miCon != null) {
                    if (c3 == 0) {
                        DefaultTableModel modelo = (DefaultTableModel) table_serv.getModel();
                        try {
                            String sql = "select id_servicio from servicios where nombre like '" + serv + "'";
                            Statement stmt = miCon.createStatement();
                            ResultSet r = stmt.executeQuery(sql);
                            r.next();
                            int id = r.getInt("id_servicio");
                            String sql2 = "select * from servicios where id_servicio =" + id;
                            stmt = miCon.createStatement();
                            ResultSet r2 = stmt.executeQuery(sql2);
                            if (r2.next()) {
                                Object reg[] = {
                                    id,
                                    r2.getString("nombre"),
                                    txt_prec.getText(),
                                    num_ses.getText()
                                };
                                modelo.addRow(reg);
                                c3++;
                            } else {
                                JOptionPane.showMessageDialog(this, "Codigo incorrecto");
                            }
                            txt_prec.setText("");
                            num_ses.setText("");

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(this, "Conexión Fallida" + e.getMessage());
                        }
                    } else {
                        if (!Recorre3(serv)) {
                            DefaultTableModel modelo = (DefaultTableModel) table_serv.getModel();
                            try {
                                String sql = "select id_servicio from servicios where nombre like '" + serv + "'";
                                Statement stmt = miCon.createStatement();
                                ResultSet r = stmt.executeQuery(sql);
                                r.next();
                                int id = r.getInt("id_servicio");
                                String sql2 = "select * from servicios where id_servicio =" + id;
                                stmt = miCon.createStatement();
                                ResultSet r2 = stmt.executeQuery(sql2);
                                if (r2.next()) {
                                    Object reg[] = {
                                        id,
                                        r2.getString("nombre"),
                                        txt_prec.getText(),
                                        num_ses.getText()
                                    };
                                    modelo.addRow(reg);
                                    //c3++;
                                } else {
                                    JOptionPane.showMessageDialog(this, "Codigo incorrecto");
                                }
                                txt_prec.setText("");
                                num_ses.setText("");
                            } catch (SQLException e) {
                                JOptionPane.showMessageDialog(this, "Conexión Fallida" + e.getMessage());
                            }

                        }

                    }//else
                }//mi con
            } else {
                JOptionPane.showMessageDialog(this, "Error, no dejar campos vacíos");
            }
        }//termina, ponerlo arriba 
        else {
            JOptionPane.showMessageDialog(this, "Error");
        }
        suma();
        txtcant_pro.requestFocus();
    }//GEN-LAST:event_AgregarServMouseClicked

    private void telKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_telKeyTyped

    private void text_desKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_desKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        //48-57
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_text_desKeyTyped

    private void txtid_proKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtid_proKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        //48-57
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtid_proKeyTyped

    private void txtcant_proKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcant_proKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        //48-57
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtcant_proKeyTyped

    private void num_sesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_num_sesKeyTyped
        int k = (int) evt.getKeyChar();//k = al valor de la tecla presionada    
        //48-57
        if (k >= 97 && k <= 127 || k >= 65 && k <= 90 || k >= 30 && k <= 47 || k >= 58 && k <= 64 || k >= 91 && k <= 96) {//Si el caracter ingresado es una letra
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);//Limpiar el caracter ingresado
            JOptionPane.showMessageDialog(this, "Ingrese sólo números", "Validando Datos",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_num_sesKeyTyped

    private void button_actualizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_actualizarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_button_actualizarMouseEntered

    private void txt_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precioKeyTyped

    private void txt_precKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precKeyTyped

    private void AgregarServMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgregarServMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_AgregarServMouseEntered

    private void AgregarPed1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgregarPed1MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) table_pedidos.getModel();
        modelo.removeRow(l);
        suma();
    }//GEN-LAST:event_AgregarPed1MouseClicked

    private void AgregarPed2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgregarPed2MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) table_productos.getModel();
        modelo.removeRow(n);
        suma();
    }//GEN-LAST:event_AgregarPed2MouseClicked

    private void AgregarPed3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgregarPed3MouseClicked
        DefaultTableModel modelo = (DefaultTableModel) table_serv.getModel();
        modelo.removeRow(m);
        suma();
    }//GEN-LAST:event_AgregarPed3MouseClicked
    public void llenarCB() throws SQLException {
        Connection miCon;
        miCon = (new ConexionBD()).conectar();
        String sql = "select nombre from servicios";
        try (Statement stmt = miCon.createStatement()) {
            ResultSet r = stmt.executeQuery(sql);
            combi.removeAllItems(); //Vaciamos el JComboBox
            ArrayList<String> resultat = new ArrayList<>();
            while (r.next()) {
                resultat.add(r.getString("nombre"));
            }
            for (int i = 0; i < resultat.size(); i++) {
                combi.addItem(resultat.get(i));
            }
        }
    }

    public void llenarCBPed() throws SQLException {
        Connection miCon;
        miCon = (new ConexionBD()).conectar();
        String sql = "select * from pedidos where status like 'Pendiente'";
        Statement stmt = miCon.createStatement();
        ResultSet r = stmt.executeQuery(sql);
        combiped.removeAllItems();
        ArrayList<String> resultat = new ArrayList<>();
        while (r.next()) {
            resultat.add("" + r.getInt("id_pedido"));
        }
        for (int i = 0; i < resultat.size(); i++) {
            combiped.addItem(resultat.get(i));
        }
    }

    public void NumVenta() throws SQLException {
        Connection miCon;
        miCon = (new ConexionBD()).conectar();
        int venta = 0;
        String sql = "select max(id_venta) as \"Ultima\" from venta";
        Statement stmt = miCon.createStatement();
        ResultSet r = stmt.executeQuery(sql);
        r.next();
        if (r.getString("ultima") == null) {
            num_venta.setText("1");
        } else {
            venta = Integer.parseInt(r.getString("ultima")) + 1;
            num_venta.setText("" + venta);
        }
    }

    public void suma() {
        float total;
        DefaultTableModel modelo1 = (DefaultTableModel) table_pedidos.getModel();
        DefaultTableModel modelo2 = (DefaultTableModel) table_productos.getModel();
        DefaultTableModel modelo3 = (DefaultTableModel) table_serv.getModel();
        total = 0;
        for (int i = 0; i < modelo1.getRowCount(); i++) {
            total = (total + Float.parseFloat(modelo1.getValueAt(i, 1) + ""));
            lbltot.setText((total) + "");
        }
        for (int i = 0; i < modelo2.getRowCount(); i++) {
            total = (total + Float.parseFloat("" + modelo2.getValueAt(i, 2)) * Float.parseFloat("" + modelo2.getValueAt(i, 3)));
            lbltot.setText((total) + "");
        }
        for (int i = 0; i < modelo3.getRowCount(); i++) {
            total = (total + Float.parseFloat("" + modelo3.getValueAt(i, 2)) * Float.parseFloat("" + modelo3.getValueAt(i, 3)));
            lbltot.setText((total) + "");
        }
        lbltot.setText(total + "");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentasAdminPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentasAdminPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentasAdminPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentasAdminPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new VentasAdminPedidos().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarPed;
    private javax.swing.JButton AgregarPed1;
    private javax.swing.JButton AgregarPed2;
    private javax.swing.JButton AgregarPed3;
    private javax.swing.JButton AgregarProd;
    private javax.swing.JButton AgregarServ;
    private javax.swing.JLabel Lbusu;
    private javax.swing.JButton button_actualizar;
    private javax.swing.JButton button_buscar;
    private javax.swing.JButton button_regresar;
    private javax.swing.JButton button_verTodo;
    private javax.swing.JComboBox<String> combi;
    private javax.swing.JComboBox<String> combiped;
    private javax.swing.JComboBox<String> combo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JLabel lbltot;
    private javax.swing.JTextField num_ses;
    private javax.swing.JLabel num_venta;
    private javax.swing.JTable table_pedidos;
    private javax.swing.JTable table_productos;
    private javax.swing.JTable table_serv;
    private javax.swing.JTextField tel;
    private javax.swing.JTextField text_des;
    private javax.swing.JTextField txt_prec;
    private javax.swing.JTextField txt_precio;
    private javax.swing.JTextField txtcant_pro;
    private javax.swing.JTextField txtid_pro;
    // End of variables declaration//GEN-END:variables
}
